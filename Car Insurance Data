{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOrA1mgqKAmSGvxz5LeXjiK",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mohamadqawasmii/Deep-Learning-/blob/main/Car%20Insurance%20Data\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.compose import ColumnTransformer\n",
        "from sklearn.preprocessing import StandardScaler, OneHotEncoder\n",
        "from sklearn.pipeline import make_pipeline\n",
        "from sklearn.impute import SimpleImputer\n",
        "from sklearn.metrics import ConfusionMatrixDisplay, classification_report, confusion_matrix\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "pd.set_option('display.max_columns', 50 )\n",
        "from sklearn import set_config\n",
        "set_config(transform_output='pandas')"
      ],
      "metadata": {
        "id": "-wq0AmlDzUOb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\"\"\"UNIVARIATE PLOTTING FUNCTIONS FOR EDA\"\"\"\n",
        "# Add the print statements to the function\n",
        "def explore_categorical(df, x, fillna = True, placeholder = 'MISSING',\n",
        "                        figsize = (6,4), order = None):\n",
        "  \"\"\"Creates a seaborn countplot with the option to temporarily fill missing values\n",
        "  Prints statements about null values, cardinality, and checks for\n",
        "  constant/quasi-constant features.\n",
        "  Source:{PASTE IN FINAL LESSON LINK}\n",
        "  \"\"\"\n",
        "  # Make a copy of the dataframe and fillna\n",
        "  temp_df = df.copy()\n",
        "  # Before filling nulls, save null value counts and percent for printing\n",
        "  null_count = temp_df[x].isna().sum()\n",
        "  null_perc = null_count/len(temp_df)* 100\n",
        "  # fillna with placeholder\n",
        "  if fillna == True:\n",
        "    temp_df[x] = temp_df[x].fillna(placeholder)\n",
        "  # Create figure with desired figsize\n",
        "  fig, ax = plt.subplots(figsize=figsize)\n",
        "  # Plotting a count plot\n",
        "  sns.countplot(data=temp_df, x=x, ax=ax, order=order)\n",
        "  # Rotate Tick Labels for long names\n",
        "  ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha='right')\n",
        "  # Add a title with the feature name included\n",
        "  ax.set_title(f\"Column: {x}\", fontweight='bold')\n",
        "\n",
        "  # Fix layout and show plot (before print statements)\n",
        "  fig.tight_layout()\n",
        "  plt.show()\n",
        "\n",
        "  # Print null value info\n",
        "  print(f\"- NaN's Found: {null_count} ({round(null_perc,2)}%)\")\n",
        "  # Print cardinality info\n",
        "  nunique = temp_df[x].nunique()\n",
        "  print(f\"- Unique Values: {nunique}\")\n",
        "  # First find value counts of feature\n",
        "  val_counts = temp_df[x].value_counts(dropna=False)\n",
        "  # Define the most common value\n",
        "  most_common_val = val_counts.index[0]\n",
        "  # Define the frequency of the most common value\n",
        "  freq = val_counts.values[0]\n",
        "  # Calculate the percentage of the most common value\n",
        "  perc_most_common = freq / len(temp_df) * 100\n",
        "  # Print the results\n",
        "  print(f\"- Most common value: '{most_common_val}' occurs {freq} times ({round(perc_most_common,2)}%)\")\n",
        "  # print message if quasi-constant or constant (most common val more than 98% of data)\n",
        "  if perc_most_common > 98:\n",
        "    print(f\"\\n- [!] Warning: '{x}' is a constant or quasi-constant feature and should be dropped.\")\n",
        "  else:\n",
        "    print(\"- Not constant or quasi-constant.\")\n",
        "  return fig, ax\n",
        "\n",
        "\n",
        "# TO DO: add the new print statements from explore_categorical\n",
        "def explore_numeric(df, x, figsize=(6,5) ):\n",
        "  \"\"\"Creates a seaborn histplot and boxplot with a share x-axis,\n",
        "  Prints statements about null values, cardinality, and checks for\n",
        "  constant/quasi-constant features.\n",
        "  Source:{PASTE IN FINAL LESSON LINK}\n",
        "  \"\"\"\n",
        "\n",
        "  ## Save null value counts and percent for printing\n",
        "  null_count = df[x].isna().sum()\n",
        "  null_perc = null_count/len(df)* 100\n",
        "\n",
        "\n",
        "  ## Making our figure with gridspec for subplots\n",
        "  gridspec = {'height_ratios':[0.7,0.3]}\n",
        "  fig, axes = plt.subplots(nrows=2, figsize=figsize,\n",
        "                           sharex=True, gridspec_kw=gridspec)\n",
        "  # Histogram on Top\n",
        "  sns.histplot(data=df, x=x, ax=axes[0])\n",
        "\n",
        "  # Boxplot on Bottom\n",
        "  sns.boxplot(data=df, x=x, ax=axes[1])\n",
        "\n",
        "  ## Adding a title\n",
        "  axes[0].set_title(f\"Column: {x}\", fontweight='bold')\n",
        "\n",
        "  ## Adjusting subplots to best fill Figure\n",
        "  fig.tight_layout()\n",
        "\n",
        "  # Ensure plot is shown before message\n",
        "  plt.show()\n",
        "\n",
        "\n",
        "  # Print null value info\n",
        "  print(f\"- NaN's Found: {null_count} ({round(null_perc,2)}%)\")\n",
        "  # Print cardinality info\n",
        "  nunique = df[x].nunique()\n",
        "  print(f\"- Unique Values: {nunique}\")\n",
        "\n",
        "\n",
        "  # Get the most most common value, its count as # and as %\n",
        "  most_common_val_count = df[x].value_counts(dropna=False).head(1)\n",
        "  most_common_val = most_common_val_count.index[0]\n",
        "  freq = most_common_val_count.values[0]\n",
        "  perc_most_common = freq / len(df) * 100\n",
        "\n",
        "  print(f\"- Most common value: '{most_common_val}' occurs {freq} times ({round(perc_most_common,2)}%)\")\n",
        "\n",
        "  # print message if quasi-constant or constant (most common val more than 98% of data)\n",
        "  if perc_most_common > 98:\n",
        "    print(f\"\\n- [!] Warning: '{x}' is a constant or quasi-constant feature and should be dropped.\")\n",
        "  else:\n",
        "    print(\"- Not constant or quasi-constant.\")\n",
        "  return fig, axes"
      ],
      "metadata": {
        "id": "zeh5DOfczY37"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "def classification_metrics(y_true, y_pred, label='',\n",
        "                           output_dict=False, figsize=(8,4),\n",
        "                           normalize='true', cmap='Blues',\n",
        "                           colorbar=False):\n",
        "  # Get the classification report\n",
        "  report = classification_report(y_true, y_pred)\n",
        "  ## Print header and report\n",
        "  header = \"-\"*70\n",
        "  print(header, f\" Classification Metrics: {label}\", header, sep='\\n')\n",
        "  print(report)\n",
        "  ## CONFUSION MATRICES SUBPLOT\n",
        "  fig, axes = plt.subplots(ncols=2, figsize=figsize)\n",
        "  # create a confusion matrix  of raw counts\n",
        "  ConfusionMatrixDisplay.from_predictions(y_true, y_pred,\n",
        "                normalize=None, cmap='gist_gray',colorbar=colorbar,\n",
        "                ax = axes[0],);\n",
        "  axes[0].set_title(\"Raw Counts\")\n",
        "  # create a confusion matrix with the test data\n",
        "  ConfusionMatrixDisplay.from_predictions(y_true, y_pred,\n",
        "                normalize=normalize, cmap=cmap,colorbar=colorbar,\n",
        "                ax = axes[1]);\n",
        "  axes[1].set_title(\"Normalized Confusion Matrix\")\n",
        "  fig.tight_layout()\n",
        "  plt.show()\n",
        "  if output_dict==True:\n",
        "    report_dict = classification_report(y_true, y_pred, output_dict=True)\n",
        "    return report_dict\n",
        "\n",
        "def evaluate_classification(model, X_train, y_train, X_test, y_test,\n",
        "                         figsize=(6,4), normalize='true', output_dict = False,\n",
        "                            cmap_train='Blues', cmap_test=\"Reds\",colorbar=False):\n",
        "  # Get predictions for training data\n",
        "  y_train_pred = model.predict(X_train)\n",
        "  # Call the helper function to obtain regression metrics for training data\n",
        "  results_train = classification_metrics(y_train, y_train_pred, #verbose = verbose,\n",
        "                                     output_dict=True, figsize=figsize,\n",
        "                                         colorbar=colorbar, cmap=cmap_train,\n",
        "                                     label='Training Data')\n",
        "  print()\n",
        "  # Get predictions for test data\n",
        "  y_test_pred = model.predict(X_test)\n",
        "  # Call the helper function to obtain regression metrics for test data\n",
        "  results_test = classification_metrics(y_test, y_test_pred, #verbose = verbose,\n",
        "                                  output_dict=True,figsize=figsize,\n",
        "                                         colorbar=colorbar, cmap=cmap_test,\n",
        "                                    label='Test Data' )\n",
        "  if output_dict == True:\n",
        "    # Store results in a dataframe if ouput_frame is True\n",
        "    results_dict = {'train':results_train,\n",
        "                    'test': results_test}\n",
        "    return results_dict"
      ],
      "metadata": {
        "id": "jyL2hpXBzez6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Updated plot_categorical_vs_target function that includes option for classification task\n",
        "def plot_categorical_vs_target(df, x, y, figsize=(6,4),\n",
        "                            fillna = True, placeholder = 'MISSING',\n",
        "                            order = None, target_type='reg'):\n",
        "  # Make a copy of the dataframe and fillna\n",
        "  temp_df = df.copy()\n",
        "  # fillna with placeholder\n",
        "  if fillna == True:\n",
        "    temp_df[x] = temp_df[x].fillna(placeholder)\n",
        "  # or drop nulls prevent unwanted 'nan' group in stripplot\n",
        "  else:\n",
        "    temp_df = temp_df.dropna(subset=[x])\n",
        "  # Create the figure and subplots\n",
        "  fig, ax = plt.subplots(figsize=figsize)\n",
        "  # REGRESSION-TARGET PLOT\n",
        "  if target_type=='reg': #Added if statement here\n",
        "    # Barplot\n",
        "    sns.barplot(data=temp_df, x=x, y=y, ax=ax, order=order, alpha=0.6,\n",
        "                linewidth=1, edgecolor='black', errorbar=None)\n",
        "    # Boxplot\n",
        "    sns.stripplot(data=temp_df, x=x, y=y, hue=x, ax=ax,\n",
        "                  order=order, hue_order=order, legend=False,\n",
        "                  edgecolor='white', linewidth=0.5,\n",
        "                  size=3,zorder=0)\n",
        "  # CLASSIFICATION-TARGET PLOT # This is the new code for the classification task\n",
        "  elif target_type=='class':\n",
        "    ax = sns.histplot(data=temp_df, hue=y, x=x, stat='percent',  multiple='fill')\n",
        "  # Rotate xlabels\n",
        "  ax.set_xticks(ax.get_xticks()) # Added this to prevent a bug\n",
        "  ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha='right')\n",
        "  # Add a title\n",
        "  ax.set_title(f\"{x} vs. {y}\")\n",
        "  fig.tight_layout()\n",
        "  return fig, ax\n",
        "# Updated plot_numeric_vs_target that includes option for classification task\n",
        "def plot_numeric_vs_target(df, x, y, figsize=(6,4),\n",
        "                           target_type='reg', estimator='mean',\n",
        "                           errorbar='ci',sorted=False,ascending=False,\n",
        "                           **kwargs): # kwargs for sns.regplot\n",
        "\n",
        "  nulls = df[[x,y]].isna().sum()\n",
        "  if nulls.sum()>0:\n",
        "    print(f\"- Excluding {nulls.sum()} NaN's\")\n",
        "    # print(nulls)\n",
        "    temp_df = df.dropna(subset=[x,y,])\n",
        "  else:\n",
        "    temp_df = df\n",
        "  # Create the figure\n",
        "  fig, ax = plt.subplots(figsize=figsize)\n",
        "\n",
        "  # REGRESSION-TARGET PLOT\n",
        "  if 'reg' in target_type:\n",
        "    # Calculate the correlation\n",
        "    corr = df[[x,y]].corr().round(2)\n",
        "    r = corr.loc[x,y]\n",
        "    # Plot the data\n",
        "    scatter_kws={'ec':'white','lw':1,'alpha':0.8}\n",
        "    sns.regplot(data=temp_df, x=x, y=y, ax=ax, scatter_kws=scatter_kws, **kwargs) # Included the new argument within the sns.regplot function\n",
        "    ## Add the title with the correlation\n",
        "    ax.set_title(f\"{x} vs. {y} (r = {r})\")\n",
        "\n",
        "  # CLASSIFICATION-TARGET PLOT\n",
        "  elif 'class' in target_type:\n",
        "\n",
        "    # Sort the groups by median/mean\n",
        "    if sorted == True:\n",
        "\n",
        "      if estimator == 'median':\n",
        "        group_vals = temp_df.groupby(y)[x].median()\n",
        "      elif estimator =='mean':\n",
        "        group_vals = temp_df.groupby(y)[x].mean()\n",
        "\n",
        "      ## Sort values\n",
        "      group_vals = group_vals.sort_values(ascending=ascending)\n",
        "      order = group_vals.index\n",
        "\n",
        "    else:\n",
        "      # Set order to None if not calcualted\n",
        "      order = None\n",
        "\n",
        "\n",
        "    # Left Subplot (barplot)\n",
        "    sns.barplot(data=temp_df, x=y, y=x, order=order,  estimator=estimator,\n",
        "                errorbar=errorbar, ax=ax, **kwargs)\n",
        "\n",
        "    # Add title\n",
        "    ax.set_title(f\"{x} vs. {y}\")\n",
        "\n",
        "    # rotate xaxis labels\n",
        "    ax.set_xticks(ax.get_xticks())\n",
        "    ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha='right')\n",
        "\n",
        "\n",
        "  # Final Adjustments & return\n",
        "  fig.tight_layout()\n",
        "  fig.show()\n",
        "  return fig, ax"
      ],
      "metadata": {
        "id": "Lsd3aYAoEyN3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def plot_importance(importances, top_n=None,  figsize=(8,6)):\n",
        "    # sorting with asc=false for correct order of bars\n",
        "    if top_n==None:\n",
        "        ## sort all features and set title\n",
        "        plot_vals = importances.sort_values()\n",
        "        title = \"All Features - Ranked by Importance\"\n",
        "    else:\n",
        "        ## sort features and keep top_n and set title\n",
        "        plot_vals = importances.sort_values().tail(top_n)\n",
        "        title = f\"Top {top_n} Most Important Features\"\n",
        "    ## plotting top N importances\n",
        "    ax = plot_vals.plot(kind='barh', figsize=figsize)\n",
        "    ax.set(xlabel='Importance',\n",
        "            ylabel='Feature Names',\n",
        "            title=title)\n",
        "    ## return ax in case want to continue to update/modify figure\n",
        "    return ax"
      ],
      "metadata": {
        "id": "TE23qtacIg9F"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def plot_importance_color(importances, top_n=None,  figsize=(8,6),\n",
        "                          color_dict=None):\n",
        "\n",
        "    # sorting with asc=false for correct order of bars\n",
        "    if top_n==None:\n",
        "        ## sort all features and set title\n",
        "        plot_vals = importances.sort_values()\n",
        "        title = \"All Features - Ranked by Importance\"\n",
        "    else:\n",
        "        ## sort features and keep top_n and set title\n",
        "        plot_vals = importances.sort_values().tail(top_n)\n",
        "        title = f\"Top {top_n} Most Important Features\"\n",
        "    ## create plot with colors, if provided\n",
        "    if color_dict is not None:\n",
        "        ## Getting color list and saving to plot_kws\n",
        "        colors = plot_vals.index.map(color_dict)\n",
        "        ax = plot_vals.plot(kind='barh', figsize=figsize, color=colors)\n",
        "\n",
        "    else:\n",
        "        ## create plot without colors, if not provided\n",
        "        ax = plot_vals.plot(kind='barh', figsize=figsize)\n",
        "\n",
        "    # set titles and axis labels\n",
        "    ax.set(xlabel='Importance',\n",
        "           ylabel='Feature Names',\n",
        "           title=title)\n",
        "\n",
        "    ## return ax in case want to continue to update/modify figure\n",
        "    return ax"
      ],
      "metadata": {
        "id": "stvUrihUI2k2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "path = \"/content/Car_Insurance_Claim.csv\"\n",
        "df = pd.read_csv(path)\n",
        "df.info()\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 765
        },
        "id": "9jnlBTPWx9ns",
        "outputId": "317c0f7c-fe9e-4540-86c9-b1e298dd8610"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 10000 entries, 0 to 9999\n",
            "Data columns (total 19 columns):\n",
            " #   Column               Non-Null Count  Dtype  \n",
            "---  ------               --------------  -----  \n",
            " 0   ID                   10000 non-null  int64  \n",
            " 1   AGE                  10000 non-null  object \n",
            " 2   GENDER               10000 non-null  object \n",
            " 3   RACE                 10000 non-null  object \n",
            " 4   DRIVING_EXPERIENCE   10000 non-null  object \n",
            " 5   EDUCATION            10000 non-null  object \n",
            " 6   INCOME               10000 non-null  object \n",
            " 7   CREDIT_SCORE         9018 non-null   float64\n",
            " 8   VEHICLE_OWNERSHIP    10000 non-null  float64\n",
            " 9   VEHICLE_YEAR         10000 non-null  object \n",
            " 10  MARRIED              10000 non-null  float64\n",
            " 11  CHILDREN             10000 non-null  float64\n",
            " 12  POSTAL_CODE          10000 non-null  int64  \n",
            " 13  ANNUAL_MILEAGE       9043 non-null   float64\n",
            " 14  VEHICLE_TYPE         10000 non-null  object \n",
            " 15  SPEEDING_VIOLATIONS  10000 non-null  int64  \n",
            " 16  DUIS                 10000 non-null  int64  \n",
            " 17  PAST_ACCIDENTS       10000 non-null  int64  \n",
            " 18  OUTCOME              10000 non-null  float64\n",
            "dtypes: float64(6), int64(5), object(8)\n",
            "memory usage: 1.4+ MB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       ID    AGE  GENDER      RACE DRIVING_EXPERIENCE    EDUCATION  \\\n",
              "0  569520    65+  female  majority               0-9y  high school   \n",
              "1  750365  16-25    male  majority               0-9y         none   \n",
              "2  199901  16-25  female  majority               0-9y  high school   \n",
              "3  478866  16-25    male  majority               0-9y   university   \n",
              "4  731664  26-39    male  majority             10-19y         none   \n",
              "\n",
              "          INCOME  CREDIT_SCORE  VEHICLE_OWNERSHIP VEHICLE_YEAR  MARRIED  \\\n",
              "0    upper class      0.629027                1.0   after 2015      0.0   \n",
              "1        poverty      0.357757                0.0  before 2015      0.0   \n",
              "2  working class      0.493146                1.0  before 2015      0.0   \n",
              "3  working class      0.206013                1.0  before 2015      0.0   \n",
              "4  working class      0.388366                1.0  before 2015      0.0   \n",
              "\n",
              "   CHILDREN  POSTAL_CODE  ANNUAL_MILEAGE VEHICLE_TYPE  SPEEDING_VIOLATIONS  \\\n",
              "0       1.0        10238         12000.0        sedan                    0   \n",
              "1       0.0        10238         16000.0        sedan                    0   \n",
              "2       0.0        10238         11000.0        sedan                    0   \n",
              "3       1.0        32765         11000.0        sedan                    0   \n",
              "4       0.0        32765         12000.0        sedan                    2   \n",
              "\n",
              "   DUIS  PAST_ACCIDENTS  OUTCOME  \n",
              "0     0               0      0.0  \n",
              "1     0               0      1.0  \n",
              "2     0               0      0.0  \n",
              "3     0               0      0.0  \n",
              "4     0               1      1.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0f617f01-c826-4cc2-91c0-61155b0610d8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>AGE</th>\n",
              "      <th>GENDER</th>\n",
              "      <th>RACE</th>\n",
              "      <th>DRIVING_EXPERIENCE</th>\n",
              "      <th>EDUCATION</th>\n",
              "      <th>INCOME</th>\n",
              "      <th>CREDIT_SCORE</th>\n",
              "      <th>VEHICLE_OWNERSHIP</th>\n",
              "      <th>VEHICLE_YEAR</th>\n",
              "      <th>MARRIED</th>\n",
              "      <th>CHILDREN</th>\n",
              "      <th>POSTAL_CODE</th>\n",
              "      <th>ANNUAL_MILEAGE</th>\n",
              "      <th>VEHICLE_TYPE</th>\n",
              "      <th>SPEEDING_VIOLATIONS</th>\n",
              "      <th>DUIS</th>\n",
              "      <th>PAST_ACCIDENTS</th>\n",
              "      <th>OUTCOME</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>569520</td>\n",
              "      <td>65+</td>\n",
              "      <td>female</td>\n",
              "      <td>majority</td>\n",
              "      <td>0-9y</td>\n",
              "      <td>high school</td>\n",
              "      <td>upper class</td>\n",
              "      <td>0.629027</td>\n",
              "      <td>1.0</td>\n",
              "      <td>after 2015</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>10238</td>\n",
              "      <td>12000.0</td>\n",
              "      <td>sedan</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>750365</td>\n",
              "      <td>16-25</td>\n",
              "      <td>male</td>\n",
              "      <td>majority</td>\n",
              "      <td>0-9y</td>\n",
              "      <td>none</td>\n",
              "      <td>poverty</td>\n",
              "      <td>0.357757</td>\n",
              "      <td>0.0</td>\n",
              "      <td>before 2015</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10238</td>\n",
              "      <td>16000.0</td>\n",
              "      <td>sedan</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>199901</td>\n",
              "      <td>16-25</td>\n",
              "      <td>female</td>\n",
              "      <td>majority</td>\n",
              "      <td>0-9y</td>\n",
              "      <td>high school</td>\n",
              "      <td>working class</td>\n",
              "      <td>0.493146</td>\n",
              "      <td>1.0</td>\n",
              "      <td>before 2015</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10238</td>\n",
              "      <td>11000.0</td>\n",
              "      <td>sedan</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>478866</td>\n",
              "      <td>16-25</td>\n",
              "      <td>male</td>\n",
              "      <td>majority</td>\n",
              "      <td>0-9y</td>\n",
              "      <td>university</td>\n",
              "      <td>working class</td>\n",
              "      <td>0.206013</td>\n",
              "      <td>1.0</td>\n",
              "      <td>before 2015</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>32765</td>\n",
              "      <td>11000.0</td>\n",
              "      <td>sedan</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>731664</td>\n",
              "      <td>26-39</td>\n",
              "      <td>male</td>\n",
              "      <td>majority</td>\n",
              "      <td>10-19y</td>\n",
              "      <td>none</td>\n",
              "      <td>working class</td>\n",
              "      <td>0.388366</td>\n",
              "      <td>1.0</td>\n",
              "      <td>before 2015</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>32765</td>\n",
              "      <td>12000.0</td>\n",
              "      <td>sedan</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f617f01-c826-4cc2-91c0-61155b0610d8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0f617f01-c826-4cc2-91c0-61155b0610d8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0f617f01-c826-4cc2-91c0-61155b0610d8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-41d989b8-14e0-4266-9b39-1ceae4f73002\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41d989b8-14e0-4266-9b39-1ceae4f73002')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-41d989b8-14e0-4266-9b39-1ceae4f73002 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 290030,\n        \"min\": 101,\n        \"max\": 999976,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          453152,\n          159521,\n          593578\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AGE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"16-25\",\n          \"40-64\",\n          \"65+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GENDER\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"male\",\n          \"female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RACE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"minority\",\n          \"majority\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DRIVING_EXPERIENCE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"10-19y\",\n          \"30y+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EDUCATION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"high school\",\n          \"none\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"INCOME\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"poverty\",\n          \"middle class\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CREDIT_SCORE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1376880893311325,\n        \"min\": 0.0533575454627435,\n        \"max\": 0.9608188278116948,\n        \"num_unique_values\": 9018,\n        \"samples\": [\n          0.41480763135074,\n          0.4294508663165374\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VEHICLE_OWNERSHIP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4595781992350502,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VEHICLE_YEAR\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"before 2015\",\n          \"after 2015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MARRIED\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5000217617026377,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CHILDREN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4630075567414985,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"POSTAL_CODE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18915,\n        \"min\": 10238,\n        \"max\": 92101,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          32765,\n          21217\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ANNUAL_MILEAGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2818.4345283017233,\n        \"min\": 2000.0,\n        \"max\": 22000.0,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          12000.0,\n          2000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VEHICLE_TYPE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"sports car\",\n          \"sedan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SPEEDING_VIOLATIONS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 22,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          0,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DUIS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PAST_ACCIDENTS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 15,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          10,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTCOME\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4638584120856796,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 349
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isna().sum().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HGpMQhVCykkS",
        "outputId": "e33aa17f-6c37-480d-b108-5f068731c75e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1939"
            ]
          },
          "metadata": {},
          "execution_count": 350
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "string_cols = df.select_dtypes('object').columns\n",
        "string_cols"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UnY4TcrS0ZmG",
        "outputId": "6d538f37-066f-4c99-ac80-e8c204a6f71e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['AGE', 'GENDER', 'RACE', 'DRIVING_EXPERIENCE', 'EDUCATION', 'INCOME',\n",
              "       'VEHICLE_YEAR', 'VEHICLE_TYPE'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 351
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "numeric_cols = df.select_dtypes('number').columns\n",
        "numeric_cols"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_gRJyAIK62jX",
        "outputId": "114627b2-e400-4404-b28d-e904de1bc67a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['ID', 'CREDIT_SCORE', 'VEHICLE_OWNERSHIP', 'MARRIED', 'CHILDREN',\n",
              "       'POSTAL_CODE', 'ANNUAL_MILEAGE', 'SPEEDING_VIOLATIONS', 'DUIS',\n",
              "       'PAST_ACCIDENTS', 'OUTCOME'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 352
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[numeric_cols].isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "dwXGnui76554",
        "outputId": "3c70ad8c-e74c-4b7c-cba3-3fa37542361d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID                       0\n",
              "CREDIT_SCORE           982\n",
              "VEHICLE_OWNERSHIP        0\n",
              "MARRIED                  0\n",
              "CHILDREN                 0\n",
              "POSTAL_CODE              0\n",
              "ANNUAL_MILEAGE         957\n",
              "SPEEDING_VIOLATIONS      0\n",
              "DUIS                     0\n",
              "PAST_ACCIDENTS           0\n",
              "OUTCOME                  0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CREDIT_SCORE</th>\n",
              "      <td>982</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_OWNERSHIP</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MARRIED</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CHILDREN</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POSTAL_CODE</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL_MILEAGE</th>\n",
              "      <td>957</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SPEEDING_VIOLATIONS</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DUIS</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PAST_ACCIDENTS</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>OUTCOME</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 353
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[string_cols].isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "Af7Bll0-6w5q",
        "outputId": "54df7ce8-72a7-453e-ecec-df6f62b465c6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "AGE                   0\n",
              "GENDER                0\n",
              "RACE                  0\n",
              "DRIVING_EXPERIENCE    0\n",
              "EDUCATION             0\n",
              "INCOME                0\n",
              "VEHICLE_YEAR          0\n",
              "VEHICLE_TYPE          0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AGE</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GENDER</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RACE</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_YEAR</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_TYPE</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 354
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Obtain the value counts for all string columns\n",
        "for col in string_cols:\n",
        "  print(f\"Value Counts for {col}\")\n",
        "  print(df[col].value_counts())\n",
        "  # Increasing readability by adding an empty line\n",
        "  print('\\n')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mg-HcAua2edn",
        "outputId": "0e7aeb57-035f-481c-a0d7-8b191b6f9e0c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Value Counts for AGE\n",
            "AGE\n",
            "26-39    3063\n",
            "40-64    2931\n",
            "16-25    2016\n",
            "65+      1990\n",
            "Name: count, dtype: int64\n",
            "\n",
            "\n",
            "Value Counts for GENDER\n",
            "GENDER\n",
            "female    5010\n",
            "male      4990\n",
            "Name: count, dtype: int64\n",
            "\n",
            "\n",
            "Value Counts for RACE\n",
            "RACE\n",
            "majority    9012\n",
            "minority     988\n",
            "Name: count, dtype: int64\n",
            "\n",
            "\n",
            "Value Counts for DRIVING_EXPERIENCE\n",
            "DRIVING_EXPERIENCE\n",
            "0-9y      3530\n",
            "10-19y    3299\n",
            "20-29y    2119\n",
            "30y+      1052\n",
            "Name: count, dtype: int64\n",
            "\n",
            "\n",
            "Value Counts for EDUCATION\n",
            "EDUCATION\n",
            "high school    4157\n",
            "university     3928\n",
            "none           1915\n",
            "Name: count, dtype: int64\n",
            "\n",
            "\n",
            "Value Counts for INCOME\n",
            "INCOME\n",
            "upper class      4336\n",
            "middle class     2138\n",
            "poverty          1814\n",
            "working class    1712\n",
            "Name: count, dtype: int64\n",
            "\n",
            "\n",
            "Value Counts for VEHICLE_YEAR\n",
            "VEHICLE_YEAR\n",
            "before 2015    6967\n",
            "after 2015     3033\n",
            "Name: count, dtype: int64\n",
            "\n",
            "\n",
            "Value Counts for VEHICLE_TYPE\n",
            "VEHICLE_TYPE\n",
            "sedan         9523\n",
            "sports car     477\n",
            "Name: count, dtype: int64\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "explore_categorical(df, 'OUTCOME')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "JH0migEM4pnJ",
        "outputId": "dcdaa99c-cc47-4531-cb9d-923304dbabf3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-344-bb05217bb22a>:23: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.\n",
            "  ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha='right')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "- NaN's Found: 0 (0.0%)\n",
            "- Unique Values: 2\n",
            "- Most common value: '0.0' occurs 6867 times (68.67%)\n",
            "- Not constant or quasi-constant.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(<Figure size 600x400 with 1 Axes>,\n",
              " <Axes: title={'center': 'Column: OUTCOME'}, xlabel='OUTCOME', ylabel='count'>)"
            ]
          },
          "metadata": {},
          "execution_count": 356
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "explore_categorical(df, 'EDUCATION')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 546
        },
        "id": "8ddhHkWg4zhZ",
        "outputId": "4748f473-cf84-4653-d0cb-bb7f7d744433"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-344-bb05217bb22a>:23: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.\n",
            "  ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha='right')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "- NaN's Found: 0 (0.0%)\n",
            "- Unique Values: 3\n",
            "- Most common value: 'high school' occurs 4157 times (41.57%)\n",
            "- Not constant or quasi-constant.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(<Figure size 600x400 with 1 Axes>,\n",
              " <Axes: title={'center': 'Column: EDUCATION'}, xlabel='EDUCATION', ylabel='count'>)"
            ]
          },
          "metadata": {},
          "execution_count": 357
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "explore_numeric(df, 'AGE')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 628
        },
        "id": "YJx2LHfy42tO",
        "outputId": "3c60ea66-4d22-4eb7-97f7-f965cb728932"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x500 with 2 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAk4AAAHpCAYAAAB0qLM+AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA+SklEQVR4nO3de1iUdf7/8RcIDHiYQVJOiYiZCuUhzZA00zTAzGq1/WplWpmlP3RTOrhsrqe2pTXT2jLL9ZRfNQ+7HaVU1NQy1CRJ84CHUDwBqwajpnjg/v3hxf11AvVG0QF8Pq7rvpr7vt/zmffNqLy678/c42EYhiEAAABclqe7GwAAAKgsCE4AAAAWEZwAAAAsIjgBAABYRHACAACwiOAEAABgEcEJAADAIoITAACARQQnAAAAiwhOACqMBg0ayMPDQx4eHu5uBQBKRXACUGYnTpzQxIkT1aFDB910003y9fVVRESEHnzwQc2ePVunT592d4uVRmFhofz9/c3AWK1aNR08ePCSz9m8ebMGDhyopk2bqlatWqpRo4YaNWqk2NhYvfPOOzpw4IBZu3LlSnPsiy0ZGRnX+CiBqsPL3Q0AqFy2bt2q7t2765dffnHZvmfPHu3Zs0cpKSm6/fbb1bJlS/c0WMl89dVXKigoMNeLioq0YMECDR06tNT6MWPGaMyYMfr914zu3r1bu3fvVmpqqvbt26fx48dfy7aBGxbBCYBlR48eVdeuXZWdnS1JCg0N1csvv6xmzZrp2LFjWrVqlWbMmOHmLiuXjz/+uMS2efPmlRqc3n77bY0ePdpc79q1q/r06aOQkBAdPXpUa9eu1bx58y76WsHBwVq4cGGJ7bfeeusV9Q7ckAwAsCgpKcmQZEgyHA6HsX///hI1ubm5xpEjR8z1wsJC44033jBatGhhVK9e3fDz8zOaN29uJCcnG4WFhS7PDQ8PN8cvNmPGDHPbqFGjzO1ZWVnm9nvvvdfcPmrUKHP71KlTjdGjRxvBwcFGrVq1jN69exu//vqrceTIEaNPnz6G3W43ateubTz//PPGyZMnLzr2+vXrjY4dOxp+fn5GUFCQ8eqrrxrnzp27bO+Xc+zYMcPPz8+QZISFhRl33323OcYvv/ziUnv06FGjVq1a5v7ExMRSxzx9+rSxdetWc/2bb74xnxMeHm65NwCl44wTAMvmz59vPh42bJhuvvnmEjWBgYHm48LCQsXGxmr16tUuNZs2bdKmTZv09ddfKzU1VT4+Ptek3+TkZO3evdtcnzdvnvLz83X06FGtX7/e3P7hhx+qTp06+tvf/lZijB07dujee+/VyZMnJUknT57U66+/rgYNGujZZ5+9qv4+//xzc9xHH31U4eHh+v77781ek5KSzNpFixbp2LFjkiR/f/9Se5Ukb29vRUZGXlVfAC6OyeEALDl+/LjLvKZ77rnnss95++23zdAUFhamuXPn6uOPP1b9+vUlSatXr9bEiROvTcM6P+9q3Lhxmj9/vmrVqiVJWrx4sbZu3aqpU6dq8uTJZu2HH35Y6hiHDh1Sq1at9Pnnn+tPf/rTZevL4sLLdI8++qh69uxpfqLw95fcfvrpJ/NxTEyM/Pz8zPV169bpu+++c1lKs3fv3hITwxs0aHDVxwHcSDjjBMCSCycwS+fnN13O3Llzzcfvv/++HnzwQUlSzZo11b17d0nnw8Pw4cPLsdP/06tXL7388suSpFmzZiklJUXS+bNl/fv3lyS999572rJliw4fPqyCggI5HA6XMXx8fPSf//xHQUFBevDBBzV16lT99ttv2rVrl0vdnj17ytTb0aNHtXTpUknSzTffrJiYGHl4eCg6Olpr167Vpk2btG3bNvPs0YU/f39/f5exunXrpiNHjrhsM343eRxA+eCMEwBLfh8oLveReen8Za5i0dHR5uO77rqr1JryduHrBAQEmI/vvPNO83GdOnXMx/n5+SXGaNq0qYKCgiRJnp6eql279kVry+I///mPzpw5I0nq0aOHeabpj3/8o1lz4RmpC3/++/fvv6LXDA4O1rfffuuy/Pvf/76isYAbFcEJgCU1a9ZUw4YNzfU1a9Zc8VhlucHlhbXnzp0zHx8+fPiyz70wbHh6/t8/d3a7vdT60s7SFAelYl5e5XOi/sJLce+++6556ezFF180t184p6xFixbm482bN5vznaTzP4viuVKXYrPZ1L59e5flwhAJ4PIITgAs69Wrl/l4woQJpZ51ysvL09GjRyVJjRs3NrdfOBl73bp15uMLa0pzYfjJyckxHy9evLgMnVcshw4d0sqVKy9bt2PHDv3444+Szl+Oq1mzpqTzZ7tee+21a9kigItgjhMAy1566SXNmTNH2dnZys/PV3R0tF566SXzPk4rV67UjBkztHLlSgUE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oBxUhK/PqXD3caqIynJ/BwCVH/dxqjr2rFuiddPHqOXjw1U3oqm728FVKP76nGtxT66y/J53++RwAACutZqB9QnBKBcVbnI4AABARUVwAgAAsIjgBAAAYBHBCQAAwCKCEwAAgEUEJwAAAIsITgAAABYRnAAAACwiOAEAAFhEcAIAALCI4AQAAGARwQkAAMAighMAAIBFBCcAAACLCE4AAAAWEZwAAAAsIjgBAABYRHACAACwiOAEAABgEcEJAADAIoITAACARQQnAAAAiwhOAAAAFhGcAAAALCI4AQAAWERwAgAAsIjgBAAAYBHBCQAAwCKCEwAAgEVuDU7Jyclq06aNatWqpcDAQD3yyCPKzMx0qenYsaM8PDxcloEDB7rUZGdnq1u3bqpevboCAwP18ssv6+zZsy41K1euVKtWrWSz2dSoUSPNnDnzWh8eAACoYtwanFatWqWEhAStXbtWqampOnPmjGJjY3XixAmXugEDBujQoUPmMm7cOHPfuXPn1K1bN50+fVrff/+9PvroI82cOVMjR440a7KystStWzd16tRJGRkZGjp0qJ599lktWbLkuh0rAACo/Lzc+eKLFy92WZ85c6YCAwOVnp6uDh06mNurV6+u4ODgUsdYunSptm7dqmXLlikoKEgtW7bUa6+9puHDh2v06NHy8fHRBx98oIiICL311luSpMjISH333XeaOHGi4uLirt0BAgCAKqVCzXEqKCiQJAUEBLhsnzNnjurUqaPbb79dSUlJ+u2338x9aWlpatasmYKCgsxtcXFxcjqd2rJli1nTpUsXlzHj4uKUlpZWah+FhYVyOp0uCwAAgFvPOF2oqKhIQ4cOVbt27XT77beb2x9//HGFh4crNDRUmzZt0vDhw5WZmalPPvlEkpSTk+MSmiSZ6zk5OZescTqdOnnypPz8/Fz2JScna8yYMeV+jAAAoHKrMMEpISFBP//8s7777juX7c8995z5uFmzZgoJCVHnzp21e/du3XLLLdekl6SkJCUmJprrTqdTYWFh1+S1AABA5VEhLtUNHjxYixYt0jfffKN69epdsjY6OlqStGvXLklScHCwcnNzXWqK14vnRV2sxm63lzjbJEk2m012u91lAQAAcGtwMgxDgwcP1qeffqoVK1YoIiLiss/JyMiQJIWEhEiSYmJitHnzZuXl5Zk1qampstvtioqK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vF5c83vJyclyOBzmEhYWVm7HBAAAKq8rCk733XefXnjhBR08eNDcduDAAQ0bNkydO3cut+Z69+6thx56SM2aNdMjjzyiRYsW6YcfftDKlSvL7TVKk5SUpIKCAnPZt2/fNX09AABQOVxRcHrvvffkdDrVoEED3XLLLbrlllsUEREhp9Opd999t7x7NDVs2FB16tTRrl27JEnBwcHKy8tzqTl79qyOHj1qzosKDg5Wbm6uS03x+sXmTtlsNtntdpcFAADgiiaHh4WF6ccff9SyZcu0fft2SVJkZKS6dOlSrs393v79+3XkyBGFhIRIkmJiYpSfn6/09HS1bt1akrRixQoVFRUpOjrarHn11Vd15swZ8/JiamqqmjRpotq1a1/TfgEAQNVSpjNOK1asUFRUlJxOpzw8PHT//fdryJAhGjJkiNq0aaPbbrtN3377reXxjh8/royMDGVkZEiSsrKylJGRoezsbB0/flwvv/yy1q5dqz179mj58uV6+OGH1ahRI8XFxUk6H9bi4+M1YMAArV+/XmvWrNHgwYPVu3dvhYaGSpIef/xx+fj4qH///tqyZYvmz5+vd955R4mJiWU5dAAAgLIFp7ffflsDBgwo9dKVw+HQ888/rwkTJlgeb8OGDbrjjjt0xx13SJISExN1xx13aOTIkapWrZo2bdqkhx56SI0bN1b//v3VunVrffvtty73cpozZ46aNm2qzp0764EHHlD79u01ZcoUl76WLl2qrKwstW7dWi+++KJGjhzJrQgAAECZlelS3U8//aR//OMfF90fGxur8ePHWx6vY8eOMgzjovuXLFly2TECAgLMm11eTPPmzct0JgwAAKA0ZTrjlJubW+ptCIp5eXnpv//971U3BQAAUBGVKTjdfPPN+vnnny+6f9OmTebEbQAAgKqmTMHpgQce0F//+ledOnWqxL6TJ09q1KhRevDBB8utOQAAgIqkTHOcRowYoU8++USNGzfW4MGD1aRJE0nS9u3bNWnSJJ07d06vvvrqNWkUAADA3coUnIKCgvT9999r0KBBSkpKMid2e3h4KC4uTpMmTSrx9SYAAABVRZlvgBkeHq6vvvpKv/76q3bt2iXDMHTrrbdyM0kAAFDlXdGdwyWpdu3aatOmTXn2AgAAUKFd0XfVAQAA3IgITgAAABYRnAAAACwiOAEAAFhEcAIAALCI4AQA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w1Fmv/76q9q1a6dOnTrp66+/Vt26dbVz507Vrl3bpS4+Pl4zZsww1y/1Mdk9e/YoIiLC0hcs4sqcOHFCLVq00DPPPKMePXqU2L979261b99e/fv315gxY2S327Vlyxb5+vpedMzt27erqKhIH374oRo1aqSff/5ZAwYM0IkTJzR+/HiX2mXLlum2224z12+66abyO7gbzKpVq5SQkKA2bdro7Nmz+stf/qLY2Fht3bpVNWrUkHQ+NMXHxyspKUnvvvuuvLy89NNPP13y6yQ8PT318MMP629/+5vq1q2rXbt2KSEhQUePHtXcuXMlSZMnT1ZSUpL+9a9/qU2bNlq/fr0GDBig2rVrq3v37tfl+KuiH374QR9++KGaN2/usn3YsGFKSUnRwoUL5XA4NHjwYPXo0UNr1qy55HgvvPCCli5dqvHjx6tZs2Y6evSojh49WqIuPz9fffv2VefOnS0FMkgygDIaPny40b59+0vW9OvXz3j44Yctj5mVlWXwx/H6kWR8+umnLtt69epl9OnT56rHHjdunBEREWGuF7+3GzduvOqxUbq8vDxDkrFq1SpzW3R0tDFixIirHvudd94x6tWrZ67HxMQYL730kktNYmKi0a5du6t+rRvVsWPHjFtvvdVITU017r33XuOFF14wDMMw8vPzDW9vb2PhwoVm7bZt2wxJRlpa2kXH27p1q+Hl5WVs3779sq/dq1cvY8SIEcaoUaOMFi1aXO2h3BC4VIcy++KLL3TnnXfqj3/8owIDA3XHHXfoX//6V4m6lStXKjAwUE2aNNGgQYN05MgRN3QLK4qKipSSkqLGjRsrLi5OgYGBio6OLvVy3uUUFBQoICCgxPaHHnpIgYGBat++vb744oty6BrFCgoKJMn8uefl5WndunUKDAzU3XffraCgIN1777367rvvyjTuwYMH9cknn+jee+81txUWFpY4C+nn56f169frzJkzV3kkN6aEhAR169ZNXbp0cdmenp6uM2fOuGxv2rSp6tevr7S0tIuO9+WXX6phw4ZatGiRIiIi1KBBAz377LMlzjjNmDFDv/zyi0aNGlW+B1TFEZxQZr/88osmT56sW2+9VUuWLNGgQYP0pz/9SR999JFZEx8fr1mzZmn58uX6xz/+oVWrVqlr1646d+6cGzvHxeTl5en48eN64403FB8fr6VLl+oPf/iDevTooVWrVlkeZ9euXXr33Xf1/PPPm9tq1qypt956SwsXLlRKSorat2+vRx55hPBUToqKijR06FC1a9dOt99+u6Tzf0clafTo0RowYIAWL16sVq1aqXPnztq5c+dlx3zsscdUvXp13XzzzbLb7Zo6daq5Ly4uTlOnTlV6eroMw9CGDRs0depUnTlzRocPH742B1mFzZs3Tz/++KOSk5NL7MvJyZGPj4/8/f1dtgcFBSknJ+eiY/7yyy/au3evFi5cqFmzZmnmzJlKT0/Xo48+atbs3LlTf/7znzV79mx5eTFrp0zcfcoLlY+3t7cRExPjsm3IkCFG27ZtL/qc3bt3G5KMZcuWmduioqKMGjVqGDVq1DCqV69uSDLXa9SoYcTHx1+zY7jR6XeX6g4cOGBIMh577DGXuu7duxu9e/c2DMMwnn/+eZf35/f2799v3HLLLUb//v0v+/pPPvnkZS/3wpqBAwca4eHhxr59+8xta9asMSQZSUlJLrXNmjUz/vznPxuGYRjx8fHmexkVFeVSd+jQIWPbtm3G559/bkRFRRmDBg0y9/3222/G008/bXh5eRnVqlUzQkNDjVdeecWQZOTk5FzDI616srOzjcDAQOOnn34yt114qW7OnDmGj49Piee1adPGeOWVVwzDcP13tPjfzAEDBhiSjMzMTPM56enphiRj+/btxtmzZ40777zTmDx5srmfS3XWETNRZiEhIYqKinLZFhkZqf/85z8XfU7Dhg1Vp04d7dq1S507d5YkffXVV+ap/QMHDqhjx47KyMgwn+Pn51f+zaNUderUkZeXV6nva/HlnbFjx+qll14q9fkHDx5Up06ddPfdd2vKlCmXfb3o6GilpqZefeM3uMGDB2vRokVavXq16tWrZ24PCQmRpFLfz+JPSU6dOtX8hJ23t7dLXXBwsIKDg9W0aVMFBATonnvu0V//+leFhITIz89P06dP14cffqjc3FyFhIRoypQpqlWrlurWrXstD7fKSU9PV15enlq1amVuO3funFavXq333ntPS5Ys0enTp5Wfn+9y1ik3N1fBwcGSXP8dLf43MyQkRF5eXmrcuLH5nMjISElSdna2goKCtGHDBm3cuFGDBw+WdP7MpWEY8vLy0tKlS3Xfffdd02OvzAhOKLN27dqV+Ojzjh07FB4eftHn7N+/X0eOHDH/QZfkUl98qrhRo0bl3C2s8PHxUZs2bS75vgYGBiowMLDEcw8cOKBOnTqpdevWmjFjxiU/tVUsIyPD5c8CysYwDA0ZMkSffvqpVq5cqYiICJf9DRo0UGhoaKnvZ9euXSVJN998s6XXKioqknR+btOFvL29zbA2b948Pfjgg5bee/yfzp07a/PmzS7bnn76aTVt2lTDhw9XWFiYvL29tXz5cvXs2VOSlJmZqezsbMXExEhSqf/utmvXTmfPntXu3bt1yy23SDr/3hfX2+32Eq/7/vvva8WKFfr3v/9d4s8Tfsfdp7xQ+axfv97w8vIyXn/9dWPnzp3GnDlzjOrVqxuzZ882DOP8J0ReeuklIy0tzcjKyjKWLVtmtGrVyrj11luNU6dOlTomn6q79o4dO2Zs3LjR2LhxoyHJmDBhgrFx40Zj7969hmEYxieffGJ4e3sbU6ZMMXbu3Gm8++67RrVq1Yxvv/32omPu37/faNSokdG5c2dj//79xqFDh8yl2MyZM425c+ca27ZtM7Zt22a8/vrrhqenpzF9+vRrfsxV1aBBgwyHw2GsXLnS5Wf+22+/mTUTJ0407Ha7sXDhQmPnzp3GiBEjDF9fX2PXrl0XHTclJcWYPn26sXnzZiMrK8tYtGiRERkZ6fKJuczMTON///d/jR07dhjr1q0zevXqZQQEBBhZWVnX8pBvGBdeqjOM85di69evb6xYscLYsGGDERMTU2KqxO+dO3fOaNWqldGhQwfjxx9/NDZs2GBER0cb999//0Wfw6U66/hNhSvy5ZdfGrfffrths9mMpk2bGlOmTDH3/fbbb0ZsbKxRt25dw9vb2wgPDzcGDBhwyfkPBKdr75tvvjEklVj69etn1kybNs1o1KiR4evra7Ro0cL47LPPLjnmjBkzSh3zwvdy5syZRmRkpFG9enXDbrcbd911l8vHq1F2F/uZz5gxw6UuOTnZqFevnlG9enUjJibmkiHYMAxjxYoVRkxMjOFwOAxfX1/j1ltvNYYPH278+uuvZs3WrVuNli1bGn5+fobdbjcefvhhSx97hzW/D04nT540/t//+39G7dq1jerVqxt/+MMfXP7H5GIOHDhg9OjRw6hZs6YRFBRkPPXUU8aRI0cuWk9wss7DMLjjIAAAgBVckAYAALCI4AQAAGARwQkAAMAighMAAIBFBCcAAACLCE4AAAAWEZwAAAAsIjgBAABYRHACAACwiOAE4IaRlpamatWqqVu3biX2nT59Wm+++aZatWqlGjVqyOFwqEWLFhoxYoQOHjxo1j311FPy8PAoscTHx1/PQwHgJnzlCoAbxrPPPquaNWtq2rRpyszMVGhoqCSpsLBQsbGx2rRpk8aMGaN27dqpbt26ysrK0scff6zatWsrOTlZ0vnglJubqxkzZriMbbPZVLt27et+TACuLy93NwAA18Px48c1f/58bdiwQTk5OZo5c6b+8pe/SJImTpyo7777Ths2bNAdd9xhPqd+/fq699579fv/v7TZbAoODr6u/QOoGLhUB+CGsGDBAjVt2lRNmjRRnz59NH36dDMQffzxx7r//vtdQtOFPDw8rmerACowghOAG8K0adPUp08fSVJ8fLwKCgq0atUqSdKOHTvUpEkTl/o//OEPqlmzpmrWrKm7777bZd+iRYvMfcXL3//+9+tzIADcikt1AKq8zMxMrV+/Xp9++qkkycvLS7169dK0adPUsWPHUp/z/vvv68SJE/rnP/+p1atXu+zr1KmTJk+e7LItICDgmvQOoGIhOAGo8qZNm6azZ8+ak8ElyTAM2Ww2vffee7r11luVmZnp8pyQkBBJpQeiGjVqqFGjRte2aQAVEpfqAFRpZ8+e1axZs/TWW28pIyPDXH766SeFhobq448/1mOPPabU1FRt3LjR3e0CqOA44wSgSlu0aJF+/fVX9e/fXw6Hw2Vfz549NW3aNH377bdKSUlR586dNWrUKN1zzz2qXbu2duzYoa+//lrVqlVzeV5hYaFycnJctnl5ealOnTrX/HgAuBf3cQJQpXXv3l1FRUVKSUkpsW/9+vWKjo7WTz/9pCZNmujtt9/Wxx9/rB07dqioqEgRERHq2rWrhg0bprCwMEnn7+P00UcflRirSZMm2r59+zU/HgDuRXACAACwiDlOAAAAFhGcAAAALCI4AQAAWERwAgAAsIjgBAAAYBHBCQAAwCKCEwAAgEUEJwAAAIsITgAAABYRnAAAACwiOAEAAFj0/wFLURVPU8y6mgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "- NaN's Found: 0 (0.0%)\n",
            "- Unique Values: 4\n",
            "- Most common value: '26-39' occurs 3063 times (30.63%)\n",
            "- Not constant or quasi-constant.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(<Figure size 600x500 with 2 Axes>,\n",
              " array([<Axes: title={'center': 'Column: AGE'}, xlabel='AGE', ylabel='Count'>,\n",
              "        <Axes: xlabel='AGE'>], dtype=object))"
            ]
          },
          "metadata": {},
          "execution_count": 358
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(data=df, x= 'AGE')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "S11FTLGi5bxp",
        "outputId": "5d399ec4-2955-4055-99ca-ef20952fb78f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='AGE'>"
            ]
          },
          "metadata": {},
          "execution_count": 359
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "explore_numeric(df, 'INCOME')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 628
        },
        "id": "kmaEBRWi519c",
        "outputId": "ed87331f-f4d4-4359-b51e-794d41341c26"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x500 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "- NaN's Found: 0 (0.0%)\n",
            "- Unique Values: 4\n",
            "- Most common value: 'upper class' occurs 4336 times (43.36%)\n",
            "- Not constant or quasi-constant.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(<Figure size 600x500 with 2 Axes>,\n",
              " array([<Axes: title={'center': 'Column: INCOME'}, xlabel='INCOME', ylabel='Count'>,\n",
              "        <Axes: xlabel='INCOME'>], dtype=object))"
            ]
          },
          "metadata": {},
          "execution_count": 360
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "target = \"OUTCOME\"\n",
        "X = df.drop(columns= target)\n",
        "y = df[target]\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)"
      ],
      "metadata": {
        "id": "jip3kKa32vsS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ohe_cols = X_train.select_dtypes(\"object\").columns\n",
        "print(\"OneHotEncoder Columns\", ohe_cols)\n",
        "impute_na = SimpleImputer(strategy= \"constant\", fill_value= \"NA\")\n",
        "ohe_encoder = OneHotEncoder(sparse_output= False, handle_unknown='ignore')\n",
        "ohe_pipe = make_pipeline(impute_na, ohe_encoder)\n",
        "ohe_tuple = (\"Category\", ohe_pipe, ohe_cols)\n",
        "ohe_tuple"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zrV_tRkK7TeV",
        "outputId": "d34945c8-f031-436e-f077-a54ef204e505"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "OneHotEncoder Columns Index(['AGE', 'GENDER', 'RACE', 'DRIVING_EXPERIENCE', 'EDUCATION', 'INCOME',\n",
            "       'VEHICLE_YEAR', 'VEHICLE_TYPE'],\n",
            "      dtype='object')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('Category',\n",
              " Pipeline(steps=[('simpleimputer',\n",
              "                  SimpleImputer(fill_value='NA', strategy='constant')),\n",
              "                 ('onehotencoder',\n",
              "                  OneHotEncoder(handle_unknown='ignore', sparse_output=False))]),\n",
              " Index(['AGE', 'GENDER', 'RACE', 'DRIVING_EXPERIENCE', 'EDUCATION', 'INCOME',\n",
              "        'VEHICLE_YEAR', 'VEHICLE_TYPE'],\n",
              "       dtype='object'))"
            ]
          },
          "metadata": {},
          "execution_count": 362
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num_cols = X_train.select_dtypes(\"number\").columns\n",
        "print(\"Numeric Columns:\", num_cols)\n",
        "imputer = SimpleImputer(strategy='constant', fill_value = 0)\n",
        "scaler = StandardScaler()\n",
        "num_pipe = make_pipeline(imputer, scaler)\n",
        "num_tuple = ('Numeric', num_pipe, num_cols)\n",
        "num_tuple"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nRrmlE3Y73vP",
        "outputId": "6cd3bf7e-e67e-4898-92fe-45b6ccb2fda8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Numeric Columns: Index(['ID', 'CREDIT_SCORE', 'VEHICLE_OWNERSHIP', 'MARRIED', 'CHILDREN',\n",
            "       'POSTAL_CODE', 'ANNUAL_MILEAGE', 'SPEEDING_VIOLATIONS', 'DUIS',\n",
            "       'PAST_ACCIDENTS'],\n",
            "      dtype='object')\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('Numeric',\n",
              " Pipeline(steps=[('simpleimputer',\n",
              "                  SimpleImputer(fill_value=0, strategy='constant')),\n",
              "                 ('standardscaler', StandardScaler())]),\n",
              " Index(['ID', 'CREDIT_SCORE', 'VEHICLE_OWNERSHIP', 'MARRIED', 'CHILDREN',\n",
              "        'POSTAL_CODE', 'ANNUAL_MILEAGE', 'SPEEDING_VIOLATIONS', 'DUIS',\n",
              "        'PAST_ACCIDENTS'],\n",
              "       dtype='object'))"
            ]
          },
          "metadata": {},
          "execution_count": 363
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "preprocessor = ColumnTransformer(transformers=[ohe_tuple, num_tuple],verbose_feature_names_out=False)"
      ],
      "metadata": {
        "id": "2pXxldIT8JLF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "preprocessor.fit(X_train)\n",
        "X_train_tf = preprocessor.transform(X_train)\n",
        "X_test_tf = preprocessor.transform(X_test)\n",
        "X_train_tf"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 461
        },
        "id": "Hb_65wF-8RfY",
        "outputId": "d1bcca72-3e36-4b2e-aaea-1a6683897077"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      AGE_16-25  AGE_26-39  AGE_40-64  AGE_65+  GENDER_female  GENDER_male  \\\n",
              "4901        0.0        0.0        1.0      0.0            0.0          1.0   \n",
              "4375        1.0        0.0        0.0      0.0            1.0          0.0   \n",
              "6698        0.0        0.0        1.0      0.0            0.0          1.0   \n",
              "9805        0.0        1.0        0.0      0.0            1.0          0.0   \n",
              "1101        1.0        0.0        0.0      0.0            1.0          0.0   \n",
              "...         ...        ...        ...      ...            ...          ...   \n",
              "5734        0.0        0.0        0.0      1.0            0.0          1.0   \n",
              "5191        1.0        0.0        0.0      0.0            0.0          1.0   \n",
              "5390        0.0        0.0        0.0      1.0            1.0          0.0   \n",
              "860         0.0        0.0        1.0      0.0            0.0          1.0   \n",
              "7270        1.0        0.0        0.0      0.0            0.0          1.0   \n",
              "\n",
              "      RACE_majority  RACE_minority  DRIVING_EXPERIENCE_0-9y  \\\n",
              "4901            1.0            0.0                      1.0   \n",
              "4375            1.0            0.0                      1.0   \n",
              "6698            1.0            0.0                      0.0   \n",
              "9805            1.0            0.0                      0.0   \n",
              "1101            1.0            0.0                      1.0   \n",
              "...             ...            ...                      ...   \n",
              "5734            1.0            0.0                      0.0   \n",
              "5191            1.0            0.0                      1.0   \n",
              "5390            1.0            0.0                      0.0   \n",
              "860             1.0            0.0                      0.0   \n",
              "7270            1.0            0.0                      1.0   \n",
              "\n",
              "      DRIVING_EXPERIENCE_10-19y  DRIVING_EXPERIENCE_20-29y  \\\n",
              "4901                        0.0                        0.0   \n",
              "4375                        0.0                        0.0   \n",
              "6698                        1.0                        0.0   \n",
              "9805                        1.0                        0.0   \n",
              "1101                        0.0                        0.0   \n",
              "...                         ...                        ...   \n",
              "5734                        0.0                        0.0   \n",
              "5191                        0.0                        0.0   \n",
              "5390                        0.0                        0.0   \n",
              "860                         0.0                        1.0   \n",
              "7270                        0.0                        0.0   \n",
              "\n",
              "      DRIVING_EXPERIENCE_30y+  EDUCATION_high school  EDUCATION_none  \\\n",
              "4901                      0.0                    1.0             0.0   \n",
              "4375                      0.0                    0.0             1.0   \n",
              "6698                      0.0                    0.0             0.0   \n",
              "9805                      0.0                    0.0             0.0   \n",
              "1101                      0.0                    0.0             1.0   \n",
              "...                       ...                    ...             ...   \n",
              "5734                      1.0                    1.0             0.0   \n",
              "5191                      0.0                    0.0             0.0   \n",
              "5390                      1.0                    0.0             0.0   \n",
              "860                       0.0                    0.0             0.0   \n",
              "7270                      0.0                    1.0             0.0   \n",
              "\n",
              "      EDUCATION_university  INCOME_middle class  INCOME_poverty  \\\n",
              "4901                   0.0                  0.0             0.0   \n",
              "4375                   0.0                  0.0             1.0   \n",
              "6698                   1.0                  0.0             0.0   \n",
              "9805                   1.0                  0.0             0.0   \n",
              "1101                   0.0                  0.0             1.0   \n",
              "...                    ...                  ...             ...   \n",
              "5734                   0.0                  0.0             0.0   \n",
              "5191                   1.0                  0.0             0.0   \n",
              "5390                   1.0                  0.0             0.0   \n",
              "860                    1.0                  0.0             0.0   \n",
              "7270                   0.0                  0.0             0.0   \n",
              "\n",
              "      INCOME_upper class  INCOME_working class  VEHICLE_YEAR_after 2015  \\\n",
              "4901                 1.0                   0.0                      0.0   \n",
              "4375                 0.0                   0.0                      0.0   \n",
              "6698                 1.0                   0.0                      0.0   \n",
              "9805                 0.0                   1.0                      0.0   \n",
              "1101                 0.0                   0.0                      0.0   \n",
              "...                  ...                   ...                      ...   \n",
              "5734                 1.0                   0.0                      0.0   \n",
              "5191                 0.0                   1.0                      1.0   \n",
              "5390                 1.0                   0.0                      1.0   \n",
              "860                  1.0                   0.0                      1.0   \n",
              "7270                 0.0                   1.0                      0.0   \n",
              "\n",
              "      VEHICLE_YEAR_before 2015  VEHICLE_TYPE_sedan  VEHICLE_TYPE_sports car  \\\n",
              "4901                       1.0                 1.0                      0.0   \n",
              "4375                       1.0                 1.0                      0.0   \n",
              "6698                       1.0                 1.0                      0.0   \n",
              "9805                       1.0                 1.0                      0.0   \n",
              "1101                       1.0                 1.0                      0.0   \n",
              "...                        ...                 ...                      ...   \n",
              "5734                       1.0                 1.0                      0.0   \n",
              "5191                       0.0                 1.0                      0.0   \n",
              "5390                       0.0                 1.0                      0.0   \n",
              "860                        0.0                 1.0                      0.0   \n",
              "7270                       1.0                 1.0                      0.0   \n",
              "\n",
              "            ID  CREDIT_SCORE  VEHICLE_OWNERSHIP   MARRIED  CHILDREN  \\\n",
              "4901  0.331565      1.139326           0.660062  1.000533  0.674880   \n",
              "4375 -1.015047     -0.837640           0.660062 -0.999467 -1.481745   \n",
              "6698 -0.632931     -2.304464           0.660062  1.000533  0.674880   \n",
              "9805  0.198738     -0.048958           0.660062 -0.999467 -1.481745   \n",
              "1101  0.185106     -1.545884           0.660062  1.000533 -1.481745   \n",
              "...        ...           ...                ...       ...       ...   \n",
              "5734  1.368845      1.133694           0.660062  1.000533  0.674880   \n",
              "5191  0.596295      0.283888           0.660062 -0.999467 -1.481745   \n",
              "5390 -0.712853      0.799882           0.660062  1.000533  0.674880   \n",
              "860   0.951788      1.369535           0.660062  1.000533  0.674880   \n",
              "7270 -0.073891     -0.603058          -1.515010  1.000533  0.674880   \n",
              "\n",
              "      POSTAL_CODE  ANNUAL_MILEAGE  SPEEDING_VIOLATIONS      DUIS  \\\n",
              "4901     3.867776       -2.449718            -0.659296 -0.432581   \n",
              "4375     0.694321        0.320551            -0.659296 -0.432581   \n",
              "6698    -0.510486       -2.449718            -0.659296 -0.432581   \n",
              "9805    -0.510486        2.167397             0.229004 -0.432581   \n",
              "1101    -0.510486       -0.141161            -0.659296 -0.432581   \n",
              "...           ...             ...                  ...       ...   \n",
              "5734    -0.510486        0.782262             0.673153  1.348077   \n",
              "5191    -0.510486        0.089695            -0.659296 -0.432581   \n",
              "5390    -0.510486       -2.449718            -0.659296 -0.432581   \n",
              "860     -0.510486       -0.602872            -0.215146 -0.432581   \n",
              "7270    -0.510486       -0.141161            -0.659296 -0.432581   \n",
              "\n",
              "      PAST_ACCIDENTS  \n",
              "4901       -0.643278  \n",
              "4375       -0.643278  \n",
              "6698        1.147363  \n",
              "9805       -0.643278  \n",
              "1101       -0.643278  \n",
              "...              ...  \n",
              "5734        1.147363  \n",
              "5191       -0.643278  \n",
              "5390        0.550483  \n",
              "860         2.341124  \n",
              "7270       -0.643278  \n",
              "\n",
              "[7500 rows x 33 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dd4a565b-c656-40ce-881e-8055c228ef9e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AGE_16-25</th>\n",
              "      <th>AGE_26-39</th>\n",
              "      <th>AGE_40-64</th>\n",
              "      <th>AGE_65+</th>\n",
              "      <th>GENDER_female</th>\n",
              "      <th>GENDER_male</th>\n",
              "      <th>RACE_majority</th>\n",
              "      <th>RACE_minority</th>\n",
              "      <th>DRIVING_EXPERIENCE_0-9y</th>\n",
              "      <th>DRIVING_EXPERIENCE_10-19y</th>\n",
              "      <th>DRIVING_EXPERIENCE_20-29y</th>\n",
              "      <th>DRIVING_EXPERIENCE_30y+</th>\n",
              "      <th>EDUCATION_high school</th>\n",
              "      <th>EDUCATION_none</th>\n",
              "      <th>EDUCATION_university</th>\n",
              "      <th>INCOME_middle class</th>\n",
              "      <th>INCOME_poverty</th>\n",
              "      <th>INCOME_upper class</th>\n",
              "      <th>INCOME_working class</th>\n",
              "      <th>VEHICLE_YEAR_after 2015</th>\n",
              "      <th>VEHICLE_YEAR_before 2015</th>\n",
              "      <th>VEHICLE_TYPE_sedan</th>\n",
              "      <th>VEHICLE_TYPE_sports car</th>\n",
              "      <th>ID</th>\n",
              "      <th>CREDIT_SCORE</th>\n",
              "      <th>VEHICLE_OWNERSHIP</th>\n",
              "      <th>MARRIED</th>\n",
              "      <th>CHILDREN</th>\n",
              "      <th>POSTAL_CODE</th>\n",
              "      <th>ANNUAL_MILEAGE</th>\n",
              "      <th>SPEEDING_VIOLATIONS</th>\n",
              "      <th>DUIS</th>\n",
              "      <th>PAST_ACCIDENTS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4901</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.331565</td>\n",
              "      <td>1.139326</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>1.000533</td>\n",
              "      <td>0.674880</td>\n",
              "      <td>3.867776</td>\n",
              "      <td>-2.449718</td>\n",
              "      <td>-0.659296</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>-0.643278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4375</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-1.015047</td>\n",
              "      <td>-0.837640</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>-0.999467</td>\n",
              "      <td>-1.481745</td>\n",
              "      <td>0.694321</td>\n",
              "      <td>0.320551</td>\n",
              "      <td>-0.659296</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>-0.643278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6698</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.632931</td>\n",
              "      <td>-2.304464</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>1.000533</td>\n",
              "      <td>0.674880</td>\n",
              "      <td>-0.510486</td>\n",
              "      <td>-2.449718</td>\n",
              "      <td>-0.659296</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>1.147363</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9805</th>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.198738</td>\n",
              "      <td>-0.048958</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>-0.999467</td>\n",
              "      <td>-1.481745</td>\n",
              "      <td>-0.510486</td>\n",
              "      <td>2.167397</td>\n",
              "      <td>0.229004</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>-0.643278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1101</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.185106</td>\n",
              "      <td>-1.545884</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>1.000533</td>\n",
              "      <td>-1.481745</td>\n",
              "      <td>-0.510486</td>\n",
              "      <td>-0.141161</td>\n",
              "      <td>-0.659296</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>-0.643278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5734</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.368845</td>\n",
              "      <td>1.133694</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>1.000533</td>\n",
              "      <td>0.674880</td>\n",
              "      <td>-0.510486</td>\n",
              "      <td>0.782262</td>\n",
              "      <td>0.673153</td>\n",
              "      <td>1.348077</td>\n",
              "      <td>1.147363</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5191</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.596295</td>\n",
              "      <td>0.283888</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>-0.999467</td>\n",
              "      <td>-1.481745</td>\n",
              "      <td>-0.510486</td>\n",
              "      <td>0.089695</td>\n",
              "      <td>-0.659296</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>-0.643278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5390</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.712853</td>\n",
              "      <td>0.799882</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>1.000533</td>\n",
              "      <td>0.674880</td>\n",
              "      <td>-0.510486</td>\n",
              "      <td>-2.449718</td>\n",
              "      <td>-0.659296</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>0.550483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>860</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.951788</td>\n",
              "      <td>1.369535</td>\n",
              "      <td>0.660062</td>\n",
              "      <td>1.000533</td>\n",
              "      <td>0.674880</td>\n",
              "      <td>-0.510486</td>\n",
              "      <td>-0.602872</td>\n",
              "      <td>-0.215146</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>2.341124</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7270</th>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.073891</td>\n",
              "      <td>-0.603058</td>\n",
              "      <td>-1.515010</td>\n",
              "      <td>1.000533</td>\n",
              "      <td>0.674880</td>\n",
              "      <td>-0.510486</td>\n",
              "      <td>-0.141161</td>\n",
              "      <td>-0.659296</td>\n",
              "      <td>-0.432581</td>\n",
              "      <td>-0.643278</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>7500 rows × 33 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd4a565b-c656-40ce-881e-8055c228ef9e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-dd4a565b-c656-40ce-881e-8055c228ef9e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-dd4a565b-c656-40ce-881e-8055c228ef9e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6b500bb7-74b7-4ba8-a430-6928007f7f6d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b500bb7-74b7-4ba8-a430-6928007f7f6d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6b500bb7-74b7-4ba8-a430-6928007f7f6d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_b4197f3e-a387-40c1-82e8-68958abce8cf\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_train_tf')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_b4197f3e-a387-40c1-82e8-68958abce8cf button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('X_train_tf');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "X_train_tf"
            }
          },
          "metadata": {},
          "execution_count": 365
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train_tf.isna().sum().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NxMHbblj8cR9",
        "outputId": "acacdd00-72c1-44ff-e235-0f58f32f317c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 366
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rf_clf = RandomForestClassifier(random_state = 42)\n",
        "rf_clf.fit(X_train_tf, y_train)\n",
        "evaluate_classification(rf_clf, X_train_tf, y_train, X_test_tf, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "btbdHsIl8l5i",
        "outputId": "5ea22231-a924-45a5-a2ea-e4a82b463316"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Training Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       1.00      1.00      1.00      5144\n",
            "         1.0       1.00      1.00      1.00      2356\n",
            "\n",
            "    accuracy                           1.00      7500\n",
            "   macro avg       1.00      1.00      1.00      7500\n",
            "weighted avg       1.00      1.00      1.00      7500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Test Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       0.86      0.90      0.88      1723\n",
            "         1.0       0.75      0.68      0.71       777\n",
            "\n",
            "    accuracy                           0.83      2500\n",
            "   macro avg       0.80      0.79      0.80      2500\n",
            "weighted avg       0.83      0.83      0.83      2500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.inspection import permutation_importance\n",
        "# Permutation importance takes a fit model and the test data.\n",
        "r = permutation_importance(rf_clf, X_test_tf, y_test,n_repeats =5, random_state = 42)\n",
        "r.keys()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N8wiCFEj8wuN",
        "outputId": "f3bfcf9a-6688-4642-c089-a105a1dd8624"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['importances_mean', 'importances_std', 'importances'])"
            ]
          },
          "metadata": {},
          "execution_count": 368
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## can make the mean importances into a series\n",
        "permutation_importances = pd.Series(r['importances_mean'],index=X_test_tf.columns,\n",
        "                           name = 'permutation importance')\n",
        "permutation_importances = permutation_importances.sort_values(ascending=False)\n",
        "permutation_importances"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "a3jvwGl89Gom",
        "outputId": "9bcb1d8f-3b0c-4288-be49-73f1bb59b610"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "VEHICLE_OWNERSHIP            3.856000e-02\n",
              "DRIVING_EXPERIENCE_0-9y      3.208000e-02\n",
              "POSTAL_CODE                  1.088000e-02\n",
              "VEHICLE_YEAR_after 2015      9.040000e-03\n",
              "VEHICLE_YEAR_before 2015     8.400000e-03\n",
              "PAST_ACCIDENTS               6.720000e-03\n",
              "DRIVING_EXPERIENCE_10-19y    3.520000e-03\n",
              "SPEEDING_VIOLATIONS          2.960000e-03\n",
              "GENDER_male                  2.880000e-03\n",
              "GENDER_female                2.800000e-03\n",
              "DRIVING_EXPERIENCE_20-29y    1.760000e-03\n",
              "MARRIED                      1.120000e-03\n",
              "AGE_40-64                    1.120000e-03\n",
              "DRIVING_EXPERIENCE_30y+      2.400000e-04\n",
              "VEHICLE_TYPE_sports car      8.000000e-05\n",
              "RACE_majority                4.440892e-17\n",
              "CHILDREN                    -2.400000e-04\n",
              "EDUCATION_university        -2.400000e-04\n",
              "VEHICLE_TYPE_sedan          -4.000000e-04\n",
              "INCOME_poverty              -4.800000e-04\n",
              "RACE_minority               -6.400000e-04\n",
              "INCOME_upper class          -8.000000e-04\n",
              "DUIS                        -8.000000e-04\n",
              "AGE_65+                     -8.800000e-04\n",
              "EDUCATION_high school       -1.200000e-03\n",
              "INCOME_middle class         -1.360000e-03\n",
              "AGE_26-39                   -1.760000e-03\n",
              "EDUCATION_none              -1.920000e-03\n",
              "CREDIT_SCORE                -2.320000e-03\n",
              "ID                          -2.960000e-03\n",
              "INCOME_working class        -3.360000e-03\n",
              "ANNUAL_MILEAGE              -3.760000e-03\n",
              "AGE_16-25                   -4.560000e-03\n",
              "Name: permutation importance, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>permutation importance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>VEHICLE_OWNERSHIP</th>\n",
              "      <td>3.856000e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_0-9y</th>\n",
              "      <td>3.208000e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POSTAL_CODE</th>\n",
              "      <td>1.088000e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_YEAR_after 2015</th>\n",
              "      <td>9.040000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_YEAR_before 2015</th>\n",
              "      <td>8.400000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PAST_ACCIDENTS</th>\n",
              "      <td>6.720000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_10-19y</th>\n",
              "      <td>3.520000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SPEEDING_VIOLATIONS</th>\n",
              "      <td>2.960000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GENDER_male</th>\n",
              "      <td>2.880000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GENDER_female</th>\n",
              "      <td>2.800000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_20-29y</th>\n",
              "      <td>1.760000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MARRIED</th>\n",
              "      <td>1.120000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_40-64</th>\n",
              "      <td>1.120000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_30y+</th>\n",
              "      <td>2.400000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_TYPE_sports car</th>\n",
              "      <td>8.000000e-05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RACE_majority</th>\n",
              "      <td>4.440892e-17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CHILDREN</th>\n",
              "      <td>-2.400000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_university</th>\n",
              "      <td>-2.400000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_TYPE_sedan</th>\n",
              "      <td>-4.000000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_poverty</th>\n",
              "      <td>-4.800000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RACE_minority</th>\n",
              "      <td>-6.400000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_upper class</th>\n",
              "      <td>-8.000000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DUIS</th>\n",
              "      <td>-8.000000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_65+</th>\n",
              "      <td>-8.800000e-04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_high school</th>\n",
              "      <td>-1.200000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_middle class</th>\n",
              "      <td>-1.360000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_26-39</th>\n",
              "      <td>-1.760000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_none</th>\n",
              "      <td>-1.920000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CREDIT_SCORE</th>\n",
              "      <td>-2.320000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <td>-2.960000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_working class</th>\n",
              "      <td>-3.360000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL_MILEAGE</th>\n",
              "      <td>-3.760000e-03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_16-25</th>\n",
              "      <td>-4.560000e-03</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 369
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "feature_names = preprocessor.get_feature_names_out()\n",
        "feature_names"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BgFZ214n_FqO",
        "outputId": "4b0a8c71-9aea-4861-eafa-e2cafbe76a93"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['AGE_16-25', 'AGE_26-39', 'AGE_40-64', 'AGE_65+', 'GENDER_female',\n",
              "       'GENDER_male', 'RACE_majority', 'RACE_minority',\n",
              "       'DRIVING_EXPERIENCE_0-9y', 'DRIVING_EXPERIENCE_10-19y',\n",
              "       'DRIVING_EXPERIENCE_20-29y', 'DRIVING_EXPERIENCE_30y+',\n",
              "       'EDUCATION_high school', 'EDUCATION_none', 'EDUCATION_university',\n",
              "       'INCOME_middle class', 'INCOME_poverty', 'INCOME_upper class',\n",
              "       'INCOME_working class', 'VEHICLE_YEAR_after 2015',\n",
              "       'VEHICLE_YEAR_before 2015', 'VEHICLE_TYPE_sedan',\n",
              "       'VEHICLE_TYPE_sports car', 'ID', 'CREDIT_SCORE',\n",
              "       'VEHICLE_OWNERSHIP', 'MARRIED', 'CHILDREN', 'POSTAL_CODE',\n",
              "       'ANNUAL_MILEAGE', 'SPEEDING_VIOLATIONS', 'DUIS', 'PAST_ACCIDENTS'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 370
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Obtain feature importances from the fit model\n",
        "rf_clf.feature_importances_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lXLe05hD-fT2",
        "outputId": "5db0c441-21de-45ae-e61f-01e35203e89c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.05006437, 0.01464506, 0.01109793, 0.00812969, 0.01757267,\n",
              "       0.01634662, 0.00696843, 0.00697899, 0.08270332, 0.02125815,\n",
              "       0.01446412, 0.00476764, 0.01401752, 0.01005089, 0.011636  ,\n",
              "       0.00994592, 0.02090945, 0.01844912, 0.01067047, 0.03042344,\n",
              "       0.0290767 , 0.00537515, 0.00522974, 0.10834712, 0.10930575,\n",
              "       0.07851363, 0.02234622, 0.01960652, 0.04544858, 0.07674603,\n",
              "       0.05364579, 0.01089348, 0.05436548])"
            ]
          },
          "metadata": {},
          "execution_count": 371
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Checking the number of feature importances matches the # of columns\n",
        "print(len(rf_clf.feature_importances_))\n",
        "print(len(X_train_tf.columns))\n",
        "len(rf_clf.feature_importances_) == len(X_train_tf.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PZYGzjnB-l19",
        "outputId": "a509f4ca-6d30-42b8-b31a-99c28ca9f409"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "33\n",
            "33\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 372
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Saving the feature importances\n",
        "importances = pd.Series(rf_clf.feature_importances_, index= feature_names,\n",
        "                       name='Feature Importance')\n",
        "importances"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "EYe0NlkA-lzM",
        "outputId": "a235923d-dced-4ef9-a3a2-d40a57f3b891"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "AGE_16-25                    0.050064\n",
              "AGE_26-39                    0.014645\n",
              "AGE_40-64                    0.011098\n",
              "AGE_65+                      0.008130\n",
              "GENDER_female                0.017573\n",
              "GENDER_male                  0.016347\n",
              "RACE_majority                0.006968\n",
              "RACE_minority                0.006979\n",
              "DRIVING_EXPERIENCE_0-9y      0.082703\n",
              "DRIVING_EXPERIENCE_10-19y    0.021258\n",
              "DRIVING_EXPERIENCE_20-29y    0.014464\n",
              "DRIVING_EXPERIENCE_30y+      0.004768\n",
              "EDUCATION_high school        0.014018\n",
              "EDUCATION_none               0.010051\n",
              "EDUCATION_university         0.011636\n",
              "INCOME_middle class          0.009946\n",
              "INCOME_poverty               0.020909\n",
              "INCOME_upper class           0.018449\n",
              "INCOME_working class         0.010670\n",
              "VEHICLE_YEAR_after 2015      0.030423\n",
              "VEHICLE_YEAR_before 2015     0.029077\n",
              "VEHICLE_TYPE_sedan           0.005375\n",
              "VEHICLE_TYPE_sports car      0.005230\n",
              "ID                           0.108347\n",
              "CREDIT_SCORE                 0.109306\n",
              "VEHICLE_OWNERSHIP            0.078514\n",
              "MARRIED                      0.022346\n",
              "CHILDREN                     0.019607\n",
              "POSTAL_CODE                  0.045449\n",
              "ANNUAL_MILEAGE               0.076746\n",
              "SPEEDING_VIOLATIONS          0.053646\n",
              "DUIS                         0.010893\n",
              "PAST_ACCIDENTS               0.054365\n",
              "Name: Feature Importance, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Feature Importance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>AGE_16-25</th>\n",
              "      <td>0.050064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_26-39</th>\n",
              "      <td>0.014645</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_40-64</th>\n",
              "      <td>0.011098</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_65+</th>\n",
              "      <td>0.008130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GENDER_female</th>\n",
              "      <td>0.017573</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GENDER_male</th>\n",
              "      <td>0.016347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RACE_majority</th>\n",
              "      <td>0.006968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RACE_minority</th>\n",
              "      <td>0.006979</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_0-9y</th>\n",
              "      <td>0.082703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_10-19y</th>\n",
              "      <td>0.021258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_20-29y</th>\n",
              "      <td>0.014464</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_30y+</th>\n",
              "      <td>0.004768</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_high school</th>\n",
              "      <td>0.014018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_none</th>\n",
              "      <td>0.010051</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_university</th>\n",
              "      <td>0.011636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_middle class</th>\n",
              "      <td>0.009946</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_poverty</th>\n",
              "      <td>0.020909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_upper class</th>\n",
              "      <td>0.018449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_working class</th>\n",
              "      <td>0.010670</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_YEAR_after 2015</th>\n",
              "      <td>0.030423</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_YEAR_before 2015</th>\n",
              "      <td>0.029077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_TYPE_sedan</th>\n",
              "      <td>0.005375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_TYPE_sports car</th>\n",
              "      <td>0.005230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <td>0.108347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CREDIT_SCORE</th>\n",
              "      <td>0.109306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_OWNERSHIP</th>\n",
              "      <td>0.078514</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MARRIED</th>\n",
              "      <td>0.022346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CHILDREN</th>\n",
              "      <td>0.019607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POSTAL_CODE</th>\n",
              "      <td>0.045449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL_MILEAGE</th>\n",
              "      <td>0.076746</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SPEEDING_VIOLATIONS</th>\n",
              "      <td>0.053646</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DUIS</th>\n",
              "      <td>0.010893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PAST_ACCIDENTS</th>\n",
              "      <td>0.054365</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 373
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# verifying that feature importances sum to 1\n",
        "importances.sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hfuMhlll-lv0",
        "outputId": "e6c4a045-127d-4072-aa90-a2ed64b075af"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.0000000000000002"
            ]
          },
          "metadata": {},
          "execution_count": 374
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Saving the feature importances sorted from largest to smallest (ascending=False)\n",
        "sorted_importance = importances.sort_values(ascending=False)\n",
        "sorted_importance"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ToMWTsq8_aT9",
        "outputId": "85bf25ab-ef75-4d8b-bab5-fbb91863ec21"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "CREDIT_SCORE                 0.109306\n",
              "ID                           0.108347\n",
              "DRIVING_EXPERIENCE_0-9y      0.082703\n",
              "VEHICLE_OWNERSHIP            0.078514\n",
              "ANNUAL_MILEAGE               0.076746\n",
              "PAST_ACCIDENTS               0.054365\n",
              "SPEEDING_VIOLATIONS          0.053646\n",
              "AGE_16-25                    0.050064\n",
              "POSTAL_CODE                  0.045449\n",
              "VEHICLE_YEAR_after 2015      0.030423\n",
              "VEHICLE_YEAR_before 2015     0.029077\n",
              "MARRIED                      0.022346\n",
              "DRIVING_EXPERIENCE_10-19y    0.021258\n",
              "INCOME_poverty               0.020909\n",
              "CHILDREN                     0.019607\n",
              "INCOME_upper class           0.018449\n",
              "GENDER_female                0.017573\n",
              "GENDER_male                  0.016347\n",
              "AGE_26-39                    0.014645\n",
              "DRIVING_EXPERIENCE_20-29y    0.014464\n",
              "EDUCATION_high school        0.014018\n",
              "EDUCATION_university         0.011636\n",
              "AGE_40-64                    0.011098\n",
              "DUIS                         0.010893\n",
              "INCOME_working class         0.010670\n",
              "EDUCATION_none               0.010051\n",
              "INCOME_middle class          0.009946\n",
              "AGE_65+                      0.008130\n",
              "RACE_minority                0.006979\n",
              "RACE_majority                0.006968\n",
              "VEHICLE_TYPE_sedan           0.005375\n",
              "VEHICLE_TYPE_sports car      0.005230\n",
              "DRIVING_EXPERIENCE_30y+      0.004768\n",
              "Name: Feature Importance, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Feature Importance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>CREDIT_SCORE</th>\n",
              "      <td>0.109306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <td>0.108347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_0-9y</th>\n",
              "      <td>0.082703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_OWNERSHIP</th>\n",
              "      <td>0.078514</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ANNUAL_MILEAGE</th>\n",
              "      <td>0.076746</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>PAST_ACCIDENTS</th>\n",
              "      <td>0.054365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SPEEDING_VIOLATIONS</th>\n",
              "      <td>0.053646</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_16-25</th>\n",
              "      <td>0.050064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>POSTAL_CODE</th>\n",
              "      <td>0.045449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_YEAR_after 2015</th>\n",
              "      <td>0.030423</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_YEAR_before 2015</th>\n",
              "      <td>0.029077</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MARRIED</th>\n",
              "      <td>0.022346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_10-19y</th>\n",
              "      <td>0.021258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_poverty</th>\n",
              "      <td>0.020909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CHILDREN</th>\n",
              "      <td>0.019607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_upper class</th>\n",
              "      <td>0.018449</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GENDER_female</th>\n",
              "      <td>0.017573</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GENDER_male</th>\n",
              "      <td>0.016347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_26-39</th>\n",
              "      <td>0.014645</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_20-29y</th>\n",
              "      <td>0.014464</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_high school</th>\n",
              "      <td>0.014018</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_university</th>\n",
              "      <td>0.011636</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_40-64</th>\n",
              "      <td>0.011098</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DUIS</th>\n",
              "      <td>0.010893</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_working class</th>\n",
              "      <td>0.010670</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>EDUCATION_none</th>\n",
              "      <td>0.010051</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>INCOME_middle class</th>\n",
              "      <td>0.009946</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AGE_65+</th>\n",
              "      <td>0.008130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RACE_minority</th>\n",
              "      <td>0.006979</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>RACE_majority</th>\n",
              "      <td>0.006968</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_TYPE_sedan</th>\n",
              "      <td>0.005375</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>VEHICLE_TYPE_sports car</th>\n",
              "      <td>0.005230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DRIVING_EXPERIENCE_30y+</th>\n",
              "      <td>0.004768</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 375
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = plot_importance(permutation_importances,top_n=10)\n",
        "ax.set(xlabel='Permutation Importance');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "_0eBq_JR9a7j",
        "outputId": "4fc7394f-ae32-4e9e-fe67-b3657fbf65b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## color -coding top 5 bars\n",
        "highlight_feats = importances.sort_values(ascending=True).tail(5).index\n",
        "highlight_feats"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PkyOCeV7-WaT",
        "outputId": "e4cc8b02-8303-4cfd-af96-583b4114ecf9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['ANNUAL_MILEAGE', 'VEHICLE_OWNERSHIP', 'DRIVING_EXPERIENCE_0-9y', 'ID',\n",
              "       'CREDIT_SCORE'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 377
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## create a dictionary of each feature and its color\n",
        "colors_dict = {}\n",
        "for col in importances.index:\n",
        "    if col in highlight_feats:\n",
        "        colors_dict[col] = 'green'\n",
        "    else:\n",
        "        colors_dict[col] = '#006ba4'\n",
        "colors_dict"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H7EoWLgxAWvV",
        "outputId": "f650a0e9-0171-4f42-bed5-efd1f5ca8d70"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'AGE_16-25': '#006ba4',\n",
              " 'AGE_26-39': '#006ba4',\n",
              " 'AGE_40-64': '#006ba4',\n",
              " 'AGE_65+': '#006ba4',\n",
              " 'GENDER_female': '#006ba4',\n",
              " 'GENDER_male': '#006ba4',\n",
              " 'RACE_majority': '#006ba4',\n",
              " 'RACE_minority': '#006ba4',\n",
              " 'DRIVING_EXPERIENCE_0-9y': 'green',\n",
              " 'DRIVING_EXPERIENCE_10-19y': '#006ba4',\n",
              " 'DRIVING_EXPERIENCE_20-29y': '#006ba4',\n",
              " 'DRIVING_EXPERIENCE_30y+': '#006ba4',\n",
              " 'EDUCATION_high school': '#006ba4',\n",
              " 'EDUCATION_none': '#006ba4',\n",
              " 'EDUCATION_university': '#006ba4',\n",
              " 'INCOME_middle class': '#006ba4',\n",
              " 'INCOME_poverty': '#006ba4',\n",
              " 'INCOME_upper class': '#006ba4',\n",
              " 'INCOME_working class': '#006ba4',\n",
              " 'VEHICLE_YEAR_after 2015': '#006ba4',\n",
              " 'VEHICLE_YEAR_before 2015': '#006ba4',\n",
              " 'VEHICLE_TYPE_sedan': '#006ba4',\n",
              " 'VEHICLE_TYPE_sports car': '#006ba4',\n",
              " 'ID': 'green',\n",
              " 'CREDIT_SCORE': 'green',\n",
              " 'VEHICLE_OWNERSHIP': 'green',\n",
              " 'MARRIED': '#006ba4',\n",
              " 'CHILDREN': '#006ba4',\n",
              " 'POSTAL_CODE': '#006ba4',\n",
              " 'ANNUAL_MILEAGE': 'green',\n",
              " 'SPEEDING_VIOLATIONS': '#006ba4',\n",
              " 'DUIS': '#006ba4',\n",
              " 'PAST_ACCIDENTS': '#006ba4'}"
            ]
          },
          "metadata": {},
          "execution_count": 378
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plot_importance_color(importances, color_dict=None,top_n=10);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "Tpro5AcQAsmo",
        "outputId": "316ab3c5-87c4-49e9-d42a-0840715daed3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Select the top 2 features\n",
        "top_2_features = permutation_importances.head(2).index.tolist()\n",
        "top_2_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cVyzBvTeDnTu",
        "outputId": "437f3823-d019-4560-8a78-acfab50a63e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['VEHICLE_OWNERSHIP', 'DRIVING_EXPERIENCE_0-9y']"
            ]
          },
          "metadata": {},
          "execution_count": 380
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plot_categorical_vs_target(df, 'VEHICLE_OWNERSHIP', 'OUTCOME', target_type='class')\n",
        "plt.title('Insurance Claim Likelihood Based on Vehicle Ownership', fontsize=14)\n",
        "plt.xlabel('Vehicle Ownership', fontsize=12)\n",
        "plt.ylabel('Percentage of Claims', fontsize=12)\n",
        "plt.xticks(fontsize=10)\n",
        "plt.yticks(fontsize=10)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 412
        },
        "id": "-Jwqwz8TFgpR",
        "outputId": "a0b57714-35bd-492d-ab65-632809f4b08b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This visualization shows the percentage of insurance claims filed by customers based on whether they own a vehicle or not. Customers who do not own a vehicle are more likely to file an insurance claim compared to those who do own a vehicle. This could potentially indicate that customers who do not own a vehicle may be more likely to be involved in accidents or incidents that result in claims."
      ],
      "metadata": {
        "id": "BlU23iM_IGzG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plot_categorical_vs_target(df, 'DRIVING_EXPERIENCE', 'OUTCOME', target_type='class')\n",
        "plt.title('Insurance Claim Likelihood Based on Driving Experience', fontsize=14)\n",
        "plt.xlabel('Driving Experience (Years)', fontsize=12)\n",
        "plt.ylabel('Percentage of Claims', fontsize=12)\n",
        "plt.xticks(fontsize=10, rotation=45, ha='right')\n",
        "plt.yticks(fontsize=10)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 412
        },
        "id": "GNGD8q3eF_Os",
        "outputId": "3f63f5dc-395b-4afe-d805-1bb3e7a35572"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This visualization shows the percentage of insurance claims filed by customers based on their driving experience. Drivers with less experience (0-9 years) have a higher likelihood of filing a claim compared to drivers with more experience. This suggests that less experienced drivers may be more prone to accidents or incidents that lead to claims."
      ],
      "metadata": {
        "id": "CIM3orKgHQwu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.decomposition import PCA\n",
        "# Initialize PCA with 3 components\n",
        "pca = PCA(n_components=3, random_state=42)\n",
        "# Fit PCA on the training data (scaled numeric features)\n",
        "pca.fit(X_train_tf[num_cols])\n",
        "# Transform training data\n",
        "X_train_pca = pca.transform(X_train_tf[num_cols])\n",
        "# Transform test data\n",
        "X_test_pca = pca.transform(X_test_tf[num_cols])\n",
        "# Create DataFrames for the PCA components\n",
        "X_train_pca = pd.DataFrame(X_train_pca, columns=['PC1', 'PC2', 'PC3'], index=X_train_tf.index)\n",
        "X_test_pca = pd.DataFrame(X_test_pca, columns=['PC1', 'PC2', 'PC3'], index=X_test_tf.index)\n",
        "# Concatenate PCA components with original features\n",
        "X_train_eng = pd.concat([X_train_tf, X_train_pca], axis=1)\n",
        "X_test_eng = pd.concat([X_test_tf, X_test_pca], axis=1)"
      ],
      "metadata": {
        "id": "mju22rU6ITV9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.cluster import KMeans\n",
        "# Initialize KMeans with an initial number of clusters (e.g., 5)\n",
        "kmeans = KMeans(n_clusters=5, random_state=42)\n",
        "# Fit KMeans on the training data (scaled numeric features)\n",
        "kmeans.fit(X_train_tf[num_cols])\n",
        "# Get cluster labels for training and test data\n",
        "train_clusters = kmeans.predict(X_train_tf[num_cols])\n",
        "test_clusters = kmeans.predict(X_test_tf[num_cols])"
      ],
      "metadata": {
        "id": "ziTKFiKjOCpY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate inertia (within-cluster sum of squares) for different cluster numbers\n",
        "inertia = []\n",
        "for i in range(1, 11):  # Try cluster numbers from 1 to 10\n",
        "    kmeans = KMeans(n_clusters=i, random_state=42)\n",
        "    kmeans.fit(X_train_tf[num_cols])\n",
        "    inertia.append(kmeans.inertia_)\n",
        "# Plot the elbow curve\n",
        "plt.plot(range(1, 11), inertia, marker='o')\n",
        "plt.title('Elbow Method for Optimal k')\n",
        "plt.xlabel('Number of Clusters (k)')\n",
        "plt.ylabel('Inertia')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "nAqNRH9TO092",
        "outputId": "2b04423a-85d2-4512-8a32-8f9ce708559a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train_tf['cluster'] = train_clusters\n",
        "X_test_tf['cluster'] = test_clusters"
      ],
      "metadata": {
        "id": "ibk8cW4zO4yA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "rf = RandomForestClassifier(random_state=42)\n",
        "rf.fit(X_train_tf, y_train)\n",
        "evaluate_classification(rf, X_train_tf, y_train, X_test_tf, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "yIG9MN09PbdM",
        "outputId": "a125132b-4e26-4c95-c057-3ac2d0e711df"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Training Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       1.00      1.00      1.00      5144\n",
            "         1.0       1.00      1.00      1.00      2356\n",
            "\n",
            "    accuracy                           1.00      7500\n",
            "   macro avg       1.00      1.00      1.00      7500\n",
            "weighted avg       1.00      1.00      1.00      7500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Test Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       0.86      0.91      0.88      1723\n",
            "         1.0       0.77      0.68      0.72       777\n",
            "\n",
            "    accuracy                           0.84      2500\n",
            "   macro avg       0.82      0.80      0.80      2500\n",
            "weighted avg       0.83      0.84      0.83      2500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Train and evaluate a RandomForestClassifier on the engineered features\n",
        "rf_engineered = RandomForestClassifier(random_state=42)\n",
        "rf_engineered.fit(X_train_eng, y_train)\n",
        "evaluate_classification(rf_engineered, X_train_eng, y_train, X_test_eng, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "uIqHzgRXPeLq",
        "outputId": "6a878f90-5614-4915-e8f2-75eed94c82c9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Training Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       1.00      1.00      1.00      5144\n",
            "         1.0       1.00      1.00      1.00      2356\n",
            "\n",
            "    accuracy                           1.00      7500\n",
            "   macro avg       1.00      1.00      1.00      7500\n",
            "weighted avg       1.00      1.00      1.00      7500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Test Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       0.86      0.90      0.88      1723\n",
            "         1.0       0.76      0.68      0.72       777\n",
            "\n",
            "    accuracy                           0.83      2500\n",
            "   macro avg       0.81      0.79      0.80      2500\n",
            "weighted avg       0.83      0.83      0.83      2500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Check the balance of the target\n",
        "y.value_counts(1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        },
        "id": "4gFHcsumaJyH",
        "outputId": "fcc379ad-c14d-48f6-80ef-3aadca1f83a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "OUTCOME\n",
              "0.0    0.6867\n",
              "1.0    0.3133\n",
              "Name: proportion, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>proportion</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>OUTCOME</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0.0</th>\n",
              "      <td>0.6867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1.0</th>\n",
              "      <td>0.3133</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 396
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from imblearn.over_sampling import SMOTE\n",
        "smote = SMOTE(random_state = 42)\n",
        "X_train_sm,y_train_sm = smote.fit_resample(X_train_tf, y_train)\n",
        "y_train_sm.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        },
        "id": "hKWFhzzUaVfF",
        "outputId": "859c2a02-b858-4017-f8f2-cba6b4e25aed"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "OUTCOME\n",
              "1.0    5144\n",
              "0.0    5144\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>OUTCOME</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1.0</th>\n",
              "      <td>5144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0.0</th>\n",
              "      <td>5144</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 398
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Instantiate a default random forest with a random state for reproductibility\n",
        "rf_clf = RandomForestClassifier(random_state=42)\n",
        "# Fit on the training data\n",
        "rf_clf.fit(X_train_sm, y_train_sm)\n",
        "# Evaluate with the custom function\n",
        "evaluate_classification(rf_clf, X_train_sm,y_train_sm, X_test_tf, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "0PvtoS-AbHYX",
        "outputId": "d8ec192f-0705-4505-ee32-b03f97dfa490"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Training Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       1.00      1.00      1.00      5144\n",
            "         1.0       1.00      1.00      1.00      5144\n",
            "\n",
            "    accuracy                           1.00     10288\n",
            "   macro avg       1.00      1.00      1.00     10288\n",
            "weighted avg       1.00      1.00      1.00     10288\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Test Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       0.87      0.89      0.88      1723\n",
            "         1.0       0.75      0.71      0.73       777\n",
            "\n",
            "    accuracy                           0.84      2500\n",
            "   macro avg       0.81      0.80      0.81      2500\n",
            "weighted avg       0.83      0.84      0.84      2500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.feature_selection import SelectFromModel\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "# Instantiate a lostistic regression model\n",
        "log_reg = LogisticRegression(C=1e12)\n",
        "# Define the selector object using the model. Use default threshold (mean)\n",
        "selector = SelectFromModel(log_reg)\n",
        "# Fit the selector on the training data\n",
        "selector.fit(X_train_sm ,y_train_sm)\n",
        "selector"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "id": "tJI-Hn1CbSFo",
        "outputId": "0e587cb6-251a-4565-c02e-275adcf03973"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "SelectFromModel(estimator=LogisticRegression(C=1000000000000.0))"
            ],
            "text/html": [
              "<style>#sk-container-id-4 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: black;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-4 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-4 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-4 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: block;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-4 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-4 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-4 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-4 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 1ex;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-4 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SelectFromModel(estimator=LogisticRegression(C=1000000000000.0))</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SelectFromModel<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.feature_selection.SelectFromModel.html\">?<span>Documentation for SelectFromModel</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SelectFromModel(estimator=LogisticRegression(C=1000000000000.0))</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">estimator: LogisticRegression</label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(C=1000000000000.0)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;LogisticRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(C=1000000000000.0)</pre></div> </div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 413
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# .get_support returns an array of T/F whether it is above threshold\n",
        "above_threshold = selector.get_support()\n",
        "# Only include the features that are above the threshold in X train and X test\n",
        "X_train_sel = X_train_sm.loc[:,above_threshold]\n",
        "X_test_sel = X_test_tf.loc[:,above_threshold]\n",
        "X_train_sel.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2OrMepuXcG_G",
        "outputId": "b2da9ccf-767d-4f39-8cfa-ac38c0a222cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10288, 10)"
            ]
          },
          "metadata": {},
          "execution_count": 414
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Instantiate default random forest\n",
        "rf_clf = RandomForestClassifier(random_state=42)\n",
        "# Fit on selected featuers\n",
        "rf_clf.fit(X_train_sel, y_train_sm)\n",
        "# Evaluate with custom function\n",
        "evaluate_classification(rf_clf, X_train_sel, y_train_sm, X_test_sel, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "JBY9Gb8hcHeK",
        "outputId": "d95d7f60-c425-47ba-b66e-e6c8c490554c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Training Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       0.92      0.82      0.87      5144\n",
            "         1.0       0.84      0.93      0.88      5144\n",
            "\n",
            "    accuracy                           0.87     10288\n",
            "   macro avg       0.88      0.87      0.87     10288\n",
            "weighted avg       0.88      0.87      0.87     10288\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "----------------------------------------------------------------------\n",
            " Classification Metrics: Test Data\n",
            "----------------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       0.92      0.82      0.87      1723\n",
            "         1.0       0.68      0.84      0.75       777\n",
            "\n",
            "    accuracy                           0.83      2500\n",
            "   macro avg       0.80      0.83      0.81      2500\n",
            "weighted avg       0.84      0.83      0.83      2500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ax = plot_importance(permutation_importances,top_n=10)\n",
        "ax.set(xlabel='Permutation Importance');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "fpJdIxhRcOUv",
        "outputId": "15cdc23b-b1bd-4a34-ab1d-bd6ce9207c82"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "1_3BQFnQcnii"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}